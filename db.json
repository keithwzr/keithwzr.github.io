{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/top.png","path":"img/top.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/Java.jpg","path":"img/Java.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/valine.json","hash":"d23044e31f6f2db8d6d1297512462fea034e8acf","modified":1660040947596},{"_id":"source/categories/index.md","hash":"89de5113e3ed9a8c56aa25d81fc3c391f2425d17","modified":1660040947600},{"_id":"source/_data/link.yml","hash":"40afe504d3a4b416e9eb2d2b0c405ff9e0f96c21","modified":1660040947595},{"_id":"source/messageboard/index.md","hash":"34a47eb2a71a284476c7def3c9bdefb6b125dc59","modified":1660040947602},{"_id":"source/link/index.md","hash":"4d0afcf8ab93f41287ab2fdd075ba34912f267cf","modified":1660040947601},{"_id":"source/movies/index.md","hash":"99a1a91819076852c069dc75d8e4a7b74cbe1dc6","modified":1660040947603},{"_id":"source/tags/index.md","hash":"5324453918eaa6dca18337ab7335ced2ad265461","modified":1660040947605},{"_id":"source/_posts/hello-world.md","hash":"3df4278d642b1609fac850435e93f76c94f507a9","modified":1660040947598},{"_id":"source/music/index.md","hash":"9c1b31b86c385602b6dc7468920d14e70f3d37ee","modified":1660040947604},{"_id":"themes/butterfly/README_CN.md","hash":"01b4feffb432293223f540921ce2cde748b2d2fe","modified":1659862021267},{"_id":"themes/butterfly/README.md","hash":"cde88743f77bad1b463aa78049398b19f878090e","modified":1659862021267},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1659862021267},{"_id":"themes/butterfly/package.json","hash":"3bcb70e12282156703626e238e3719611c34c3b7","modified":1659862021284},{"_id":"themes/butterfly/_config.yml","hash":"26a7fa8c79b3732318e751875aff79975abe3775","modified":1659862021268},{"_id":"themes/butterfly/plugins.yml","hash":"0194c4fb88a6be30d983a83ac22072bb4d799c9a","modified":1659862021284},{"_id":"themes/butterfly/.github/stale.yml","hash":"5e8ea535424e8112439135d21afc5262c0bc0b39","modified":1659862021267},{"_id":"themes/butterfly/languages/default.yml","hash":"1e37a3695d50e3e61d7c36e58a6dac872a4a56cd","modified":1659862021268},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"28b6f0c39155651d747eb595e0a283bc97be2e09","modified":1659862021268},{"_id":"themes/butterfly/languages/en.yml","hash":"d1bb560698eb8b0079495b7b18b44facb610f9fd","modified":1659862021268},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"947f794e862bb2813e36887f777bdb760f70a322","modified":1659862021268},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1659862021269},{"_id":"themes/butterfly/layout/archive.pug","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1659862021269},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1659862021283},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1659862021284},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1659862021284},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1659862021284},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1659862021266},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1659862021267},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"67e4f5a66d4b8cabadbaad0410628364ee75e0ae","modified":1659862021266},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1659862021269},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"594a977ebe8d97e60fa3d7cb40fc260ded4d8a58","modified":1659862021269},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1659862021267},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1659862021269},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"de8e618ec03295561c667a49e1c383213b856f6f","modified":1659862021270},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":1659862021273},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"a557280a25f63f4312afad63fc3303ec74165557","modified":1659862021272},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"699d0d2cff233628752956c4434125c8203f7d63","modified":1659862021274},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1659862021284},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"acfe765fb2c607bff7198630dbfa53a888c36357","modified":1659862021285},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"8d39473ed112d113674a0f689f63fae06c72abd2","modified":1659862021274},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"a3d1f417965ca20253c36f9e93429f3df6268856","modified":1659862021285},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1659862021285},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b4940a5c73d3a5cd8bb5883e3041ecdd905a74e0","modified":1659862021285},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1659862021285},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"3cfc46c749e2fd7ae9c2a17206238ed0e0e17e7d","modified":1659862021285},{"_id":"themes/butterfly/source/css/var.styl","hash":"4890a40366d6443f8b8942a4e9a6dce9fe3494f5","modified":1659862021296},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"21379ed2dccb69c43b893895c9d56238c11e5f43","modified":1659862021285},{"_id":"themes/butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1659862021296},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1659862021296},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1659862021296},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1659862021297},{"_id":"themes/butterfly/source/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1659862021298},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1659862021286},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"ee3e70098eb0849497d50b75e18cf4a27c397d52","modified":1659862021286},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"b4cd617c619d1a0df93603721a6fa1317526174b","modified":1659862021286},{"_id":"themes/butterfly/source/js/main.js","hash":"73d2624ed465e4cfb1ebb00b2c8a24f5fc29bb21","modified":1659862021297},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1659862021298},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"763dab5c83f50c1c62fffc9a9dfedea29bb4e629","modified":1659862021286},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1659862021287},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"d368a8830e506c8b5eb6512b709ec8db354d5ea1","modified":1659862021286},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1659862021286},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1659862021287},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"f79c99f6c5b626c272dc2bed2b0250d6b91bb28a","modified":1659862021287},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1659862021287},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1659862021287},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1659862021287},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"d51812b43924f1bbf413c67499510dd125022005","modified":1659862021288},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1659862021288},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1659862021288},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1659862021288},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1659862021272},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"0d10532648d0335254f21a3b7d8676cb96ea8eba","modified":1659862021273},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"2fb74d0b0e4b98749427c5a1a1b0acb6c85fadc4","modified":1659862021272},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":1659862021272},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1659862021271},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"aa175e2254704335f4da09175e59ef2375ca7d03","modified":1659862021271},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"78a3abd90bb3c18cd773d3d5abac3541e7f415e5","modified":1659862021271},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"8c2524e843adfce00b16e31ee355f14ce9ffb8ba","modified":1659862021272},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1659862021272},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"15530d9ac59c576d79af75dd687efe71e8d261b0","modified":1659862021270},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"8f41fa9732ea654a10f6e666d9c782c7e27e5ea6","modified":1659862021270},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":1659862021270},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1659862021270},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1659862021270},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1659862021271},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1659862021270},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"65a23b5170204e55b813ce13a79d799b66b7382c","modified":1659862021271},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1659862021271},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1659862021273},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1659862021273},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"fed069baa9b383f57db32bb631115071d29bdc60","modified":1659862021273},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"6311eda08e4515281c51bd49f43902a51832383c","modified":1659862021273},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1659862021273},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1659862021273},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1659862021274},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1659862021278},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"6d6474ef186c18d9b4f334e1f735eadd6699effa","modified":1659862021280},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1659862021280},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1659862021281},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1659862021282},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1659862021282},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1659862021282},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"bae2f32ac96cebef600c1e37eaa8467c9a7e5d92","modified":1659862021282},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"e37468e63db2a0ac09b65d21b7de3e62425bb455","modified":1659862021282},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"6d93564a8bd13cb9b52ee5e178db3bcbf18b1bc6","modified":1659862021283},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1659862021282},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1659862021282},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1659862021283},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":1659862021283},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":1659862021283},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"2f95e99b8351fbecd9037a1bbdc3fee9d6ea8a77","modified":1659862021289},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1659862021283},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"644d520fe80cc82058467708ab82ccad313b0c27","modified":1659862021288},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1659862021283},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"7fb096656c8a6c21a4b6a5100885b1081d6021ed","modified":1659862021283},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1659862021290},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"714f19e7d66df84938bd1b82b33d5667abe1f147","modified":1659862021288},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"a0010d833ed30211601c1e0bbbc68e85b77428c6","modified":1659862021290},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"69f8e9414526dfda3af9a71c8e528fdd0ecbbfe5","modified":1659862021292},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1659862021290},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"26be2afa9d4e7016cf3c42a6cd166f01e8e4ad5c","modified":1659862021290},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"a92984f566c97bb4179f34be79240af1552c6f17","modified":1659862021292},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"d97c1722ce0fcc319f1f90ec2d51f9d746748e2b","modified":1659862021290},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1659862021290},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1659862021291},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ef21990de28bd75dcd0f88b8d616e1a7a137502f","modified":1659862021291},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"15056fba0bd5a45ea8dc97eb557f6929ff16797a","modified":1659862021291},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1659862021291},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1659862021291},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"bd88ee30ebf8ca2e7b4d3a034c317fd61733921f","modified":1659862021292},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1659862021297},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"8314e9749eb1ae40c4bae9735b7a6638b2d6876a","modified":1659862021292},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1659862021292},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"25e58a7a8bda4b73d0a0e551643ca01b09ccd7e5","modified":1659862021294},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1659862021297},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"39d61cbe0c1e937f83ba3b147afaa29b4de2f87d","modified":1659862021294},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"51e45625929d57c9df3ba9090af99b9b7bb9a15b","modified":1659862021294},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1659862021296},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1659862021293},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1659862021293},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6f4b4ede52305bce9b22c8c897dcbde8af6e2ce4","modified":1659862021293},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"8c90483d461e09cb06e91b16d8bb7b3205b0a40c","modified":1659862021293},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1659862021293},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a58d35d698885f1034dedbe99f7dbc1a801412c6","modified":1659862021293},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1659862021293},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1659862021294},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"a310e48f826a4cacc55d8e68f43806e5085554f6","modified":1659862021294},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1659862021295},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1659862021294},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1659862021295},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1659862021295},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"85ae91c83691ea4511f4277da1194a185251cc78","modified":1659862021295},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1659862021295},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1659862021276},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1659862021275},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1659862021295},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1659862021276},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1659862021276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":1659862021274},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1659862021276},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1659862021276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1659862021274},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"2be601477e1b81eee90a00c14ce5c8761d19a332","modified":1659862021274},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1659862021275},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1659862021275},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"58406a7a3bf45815769f652bf3ef81e57dcd07eb","modified":1659862021275},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"5f648086a33a32d169a2f8d8c549c08aa02f67db","modified":1659862021275},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"e846ddfe4a63b15d1416f6055f5756af5e3da7c6","modified":1659862021279},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"04b2a5882e789a988e41d45abe606f0617b08e38","modified":1659862021279},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"8ca02f97bfa93fff9cce5b8eb8feb234e7beeb98","modified":1659862021279},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"ab167c00da4506f591b96f0591bf5bd214a26d4b","modified":1659862021280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"d19e1c2c0a50f0e4547d71a17b9be88e8152f17c","modified":1659862021280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"233907dd7f5b5f33412701d2ccffbc0bbae8707b","modified":1659862021280},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1659862021278},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"dd0bc119029b62dce5dc965d5de7377e438fa29a","modified":1659862021280},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"8ec24c1939895ac0db2b2e8700bc9307b4ceb53c","modified":1659862021276},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1659862021278},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"98ef20f8a3b10c1692f9b2b3c06033d2da8a8eae","modified":1659862021276},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"f4dc7d02c8192979404ae9e134c5048d3d0a76e2","modified":1659862021279},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"8e33aca36a4d3ae9e041ba05ced8eff56ae38f77","modified":1659862021279},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"2d8fc3fb8f9aec61400acf3c94070bd8539058f8","modified":1659862021277},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"22e2ef30fe5eb1db7566e89943c74ece029b2a8e","modified":1659862021277},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"2e26af16d359ba362fa611575d7f547848057c0c","modified":1659862021277},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"591ef23c583690bd74af0cafb09af64ba5bd8151","modified":1659862021277},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1659862021277},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"190b1cca42c7f73c50f62f07d0751449941bff3f","modified":1659862021277},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"e18fbd88d8942e53e771f29b26209ab735c5c567","modified":1659862021278},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"e8245d0b4933129bb1c485d8de11a9e52e676348","modified":1659862021281},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"e9bdf80d6796afc04eb809dbbe780d97f22c7fcd","modified":1659862021277},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"a737046e730eb7264606ba0536218964044492f9","modified":1659862021278},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"15462d1ed04651ad3b430c682842ac400f6f9b47","modified":1659862021278},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1659862021278},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1659862021281},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1659862021281},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"178c9cdcc4ce5a006885b24ce4a3d624e4734899","modified":1659862021281},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1659862021281},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1659862021281},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1659862021289},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1659862021289},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"f61d63724ea5c5f352568b3a16bde023affefbe5","modified":1659862021281},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1659862021289},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1659862021289},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1659862021290},{"_id":"themes/butterfly/source/img/avatar.png","hash":"b071fffb6647cb8d8d5d0c951b4e6e176d7574c2","modified":1659630149000},{"_id":"themes/butterfly/source/img/top.png","hash":"60637f7a403b0528948ffdae1bf634e11191562d","modified":1659630149000},{"_id":"public/404.html","hash":"c97f0ee9973f6367ce76359a96309f347eda15de","modified":1660660689403},{"_id":"public/tags/index.html","hash":"69bc0048b4ce7a7fc9ac56d3960e88d9200c0c50","modified":1660660689403},{"_id":"public/music/index.html","hash":"5f491e395e34c9e320f0f7b331ee120b603a6407","modified":1660660689403},{"_id":"public/messageboard/index.html","hash":"77d3fe28e1c47e651acf238c3e54ba2790927bb7","modified":1660660689403},{"_id":"public/categories/index.html","hash":"32724a86514e038cb37b4973ff322a53dbd3ea79","modified":1660660689403},{"_id":"public/movies/index.html","hash":"55a9533f7c35554257bf15d8f8636fc02bf79651","modified":1660660689403},{"_id":"public/link/index.html","hash":"acb0c4493f98f203fe096b2587db5d18e5a3c14f","modified":1660660689403},{"_id":"public/2022/6fd2cdc18c1b/index.html","hash":"a3326df0ee405279c7295a107b05350c33f48edb","modified":1660658544800},{"_id":"public/archives/index.html","hash":"1891a4a0ade463f23bfb93770fdfc8fc982b7623","modified":1660660689403},{"_id":"public/index.html","hash":"a4063f03afc843857f9f2806842a5231dccab2f7","modified":1660660689403},{"_id":"public/archives/2022/index.html","hash":"28764bb25d12af3b2a83178922ace5aa6577d19e","modified":1660660689403},{"_id":"public/archives/2022/08/index.html","hash":"1dc6162263db805a6cebd0deaf51a90da4647ab0","modified":1660660689403},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1660047852787},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1660047852787},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1660047852787},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660047852787},{"_id":"public/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1660047852787},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1660047852787},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1660047852787},{"_id":"public/css/index.css","hash":"a88cdd3bbacc7ff12c2e813c1317c36ff9ad1361","modified":1660047852787},{"_id":"public/js/main.js","hash":"73d2624ed465e4cfb1ebb00b2c8a24f5fc29bb21","modified":1660047852787},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1660047852787},{"_id":"public/img/avatar.png","hash":"b071fffb6647cb8d8d5d0c951b4e6e176d7574c2","modified":1660047852787},{"_id":"public/img/top.png","hash":"60637f7a403b0528948ffdae1bf634e11191562d","modified":1660047852787},{"_id":"source/_posts/JAVA学习.md","hash":"f0bf1123f828acaf0c6a9d8ccde02c8a64334bfe","modified":1660655757896},{"_id":"public/2022/8b7c3915f074/index.html","hash":"427f4bdfac5510773d45dc2be90899c2f2311640","modified":1660655921799},{"_id":"public/categories/JAVA/index.html","hash":"2e5634fd77dff3156fee50573422f640e170a9b5","modified":1660660689403},{"_id":"public/tags/JAVA学习/index.html","hash":"0076a8a9d7f16dbfbbb4c489f04d49b01f43b5a9","modified":1660657756083},{"_id":"source/_posts/JAVA学习/JAVA学习.md","hash":"f0bf1123f828acaf0c6a9d8ccde02c8a64334bfe","modified":1660655757896},{"_id":"public/2022/217edad8634b/index.html","hash":"186e4ab1baca81696d589c5c854da415cce92c0e","modified":1660656018721},{"_id":"source/_posts/JAVA学习2.md","hash":"4ad0a3fb70201c08539890ced258c5df1e2d33f9","modified":1660660498777},{"_id":"source/_posts/JAVA学习1.md","hash":"0782edd934b07a97e95339d2db02facfbad978c5","modified":1660660498776},{"_id":"source/_posts/JAVA学习1/Java.jpg","hash":"2f4e6641aff5cc8d5dd80b18b4ba73d9773dd844","modified":1660656905073},{"_id":"public/2022/21b5d6b4f6c5/index.html","hash":"93842012838afcff16e5112b58c56c3285de9f71","modified":1660660552423},{"_id":"public/2022/78197bdd98aa/index.html","hash":"12a9ae103c08b9e762a94c3b412b06bf4cc08e0b","modified":1660660552423},{"_id":"public/categories/JAVA学习/index.html","hash":"32b367020acb9e8c695e99d25959deabae295ec6","modified":1660658133883},{"_id":"public/tags/JAVA/index.html","hash":"d27ec9c6d24f492f102a439284dd39318632676b","modified":1660660689403},{"_id":"public/2022/78197bdd98aa/Java.jpg","hash":"2f4e6641aff5cc8d5dd80b18b4ba73d9773dd844","modified":1660657756083},{"_id":"themes/butterfly/source/img/Java.jpg","hash":"2f4e6641aff5cc8d5dd80b18b4ba73d9773dd844","modified":1660656905073},{"_id":"public/img/Java.jpg","hash":"2f4e6641aff5cc8d5dd80b18b4ba73d9773dd844","modified":1660658351675}],"Category":[{"name":"JAVA","_id":"cl6w7ns740001zsduamt1eqp2"},{"name":"JAVA学习","_id":"cl6w8r6ca0001woducpl33up7"}],"Data":[{"_id":"valine","data":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"}},{"_id":"link","data":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}],"Page":[{"title":"留言板","date":"2022-08-09T07:11:00.000Z","type":"messageboard","comments":1,"_content":"\n","source":"messageboard/index.md","raw":"---\ntitle: 留言板\ndate: 2022-08-09 15:11:00\ntype: \"messageboard\"\ncomments: true\n---\n\n","updated":"2022-08-09T10:29:07.602Z","path":"messageboard/index.html","layout":"page","_id":"cl6m5mqss0000ywdu4woagmne","content":"","site":{"data":{"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":""},{"title":"音乐","date":"2022-08-09T07:17:38.000Z","type":"music","_content":"\n{% meting \"7345032527\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n","source":"music/index.md","raw":"---\ntitle: 音乐\ndate: 2022-08-09 15:17:38\ntype: \"music\"\n---\n\n{% meting \"7345032527\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n","updated":"2022-08-09T10:29:07.604Z","path":"music/index.html","comments":1,"layout":"page","_id":"cl6m5mqsw0001ywducnn59z0s","content":"\n    <div id=\"aplayer-GXXTRMlx\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"7345032527\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"\n    ></div>\n","site":{"data":{"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":"\n    <div id=\"aplayer-GXXTRMlx\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"7345032527\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"\n    ></div>\n"},{"title":"标签","date":"2022-08-07T15:51:16.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2022-08-07 23:51:16\ntype: \"tags\"\ncomments: false\n\n---\n","updated":"2022-08-09T10:29:07.605Z","path":"tags/index.html","layout":"page","_id":"cl6m5mqsx0002ywdufiwibaie","content":"","site":{"data":{"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":""},{"title":"分类","date":"2022-08-07T15:52:44.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2022-08-07 23:52:44\ntype: \"categories\"\ncomments: false\n---\n","updated":"2022-08-09T10:29:07.600Z","path":"categories/index.html","layout":"page","_id":"cl6m5mqt00003ywdu6gvw68tf","content":"","site":{"data":{"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":""},{"title":"图库","date":"2022-08-09T07:24:21.000Z","type":"movies","_content":"","source":"movies/index.md","raw":"---\ntitle: 图库\ndate: 2022-08-09 15:24:21\ntype: \"movies\"\n---\n","updated":"2022-08-09T10:29:07.603Z","path":"movies/index.html","comments":1,"layout":"page","_id":"cl6m5mqt50005ywdug61p8yyt","content":"","site":{"data":{"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":""},{"title":"友情链接","date":"2022-08-07T15:53:21.000Z","type":"link","comments":0,"_content":"","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: 2022-08-07 23:53:21\ntype: \"link\"\ncomments: false\n---\n","updated":"2022-08-09T10:29:07.601Z","path":"link/index.html","layout":"page","_id":"cl6m5mqt60006ywdugu1eggrz","content":"","site":{"data":{"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":""}],"Post":[{"title":"Hello World!","date":"2022-08-07T16:00:00.000Z","type":"hello world！","comments":1,"_content":"\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World!\ndate: 2022/8/8\ntype: hello world！\ncomments: ture\n---\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2022-08-09T10:29:07.598Z","layout":"post","photos":[],"link":"","_id":"cl6m5mqt00004ywduchh5eirq","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"JAVA学习2","comments":0,"date":"2022-08-16T13:43:46.000Z","top_img":"https://s2.loli.net/2022/08/16/btc7AOVp3qDrwKf.jpg","cover":"https://s2.loli.net/2022/08/16/btc7AOVp3qDrwKf.jpg","_content":"","source":"_posts/JAVA学习2.md","raw":"---\ntitle: JAVA学习2\ncomments: false\ndate: 2022-08-16 21:43:46\ntags: JAVA\ncategories: JAVA\ntop_img: https://s2.loli.net/2022/08/16/btc7AOVp3qDrwKf.jpg\ncover: https://s2.loli.net/2022/08/16/btc7AOVp3qDrwKf.jpg\n---\n","slug":"JAVA学习2","published":1,"updated":"2022-08-16T14:34:58.777Z","_id":"cl6w8r6c60000wodu26hbf91f","layout":"post","photos":[],"link":"","content":"","site":{"data":{"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"excerpt":"","more":""},{"title":"JAVA学习","date":"2022-08-16T11:08:53.000Z","comments":0,"top_img":"/img/java.jpg","cover":"/img/java.jpg","_content":"\n# JAVA基础知识\n\n## JAVA基础语法\n\n#### 注释（理解）\n\n注释是对代码的解释和说明文字，可以提高程序的可读性，因此在程序中添加必要的注释文字十分重要。Java中的注释分为三种：\n\n单行注释。单行注释的格式是使用//，从//开始至本行结尾的文字将作为注释文字。\n\n~~~java\n// 这是单行注释文字\n~~~\n\n多行注释。多行注释的格式是使用/* 和 */将一段较长的注释括起来。\n\n~~~java\n/*\n这是多行注释文字\n这是多行注释文字\n这是多行注释文字\n*/\n注意：多行注释不能嵌套使用。\n~~~\n\n文档注释。文档注释以`/**`开始，以`*/`结束。（以后讲）\n\n#### 关键字（理解）\n\n关键字是指被java语言赋予了特殊含义的单词。\n\n关键字的特点：\n\n​\t关键字的字母全部小写。\n\n​\t常用的代码编辑器对关键字都有高亮显示，比如现在我们能看到的public、class、static等。\n\n#### 常量（应用）\n\n常量：在程序运行过程中，其值不可以发生改变的量。\n\nJava中的常量分类：\n\n​\t字符串常量  用双引号括起来的多个字符（可以包含0个、一个或多个），例如\"a\"、\"abc\"、\"中国\"等\n\n​\t整数常量  整数，例如：-10、0、88等\n\n​\t小数常量  小数，例如：-5.5、1.0、88.88等\n\n​\t字符常量  用单引号括起来的一个字符，例如：'a'、'5'、'B'、'中'等\n\n​\t布尔常量  布尔值，表示真假，只有两个值true和false\n\n​\t空常量  一个特殊的值，空值，值为null\n\n除空常量外，其他常量均可使用输出语句直接输出。\n\n~~~java\npublic class Demo {\n    public static void main(String[] args) {\n        System.out.println(10); // 输出一个整数\n        System.out.println(5.5); // 输出一个小数\n        System.out.println('a'); // 输出一个字符\n        System.out.println(true); // 输出boolean值true\n        System.out.println(\"欢迎来到黑马程序员\"); // 输出字符串\n    }\n}\n~~~\n\n\n\n#### 数据类型（记忆、应用）\n\n##### 计算机存储单元\n\n我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，\n\n通常用大写字母”B”表示，字节是由连续的8个位组成。\n\n除了字节外还有一些常用的存储单位，其换算单位如下：\n\n1B（字节） = 8bit\n\n1KB = 1024B\n\n1MB = 1024KB\n\n1GB = 1024MB\n\n1TB = 1024GB\n\n##### Java中的数据类型\n\nJava是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。\n\nJava中的基本数据类型：\n\n| 数据类型 | 关键字       | 内存占用 | 取值范围                                                     |\n| :------- | ------------ | -------- | :----------------------------------------------------------- |\n| 整数类型 | byte         | 1        | -128~127                                                     |\n|          | short        | 2        | -32768~32767                                                 |\n|          | int(默认)    | 4        | -2的31次方到2的31次方-1                                      |\n|          | long         | 8        | -2的63次方到2的63次方-1                                      |\n| 浮点类型 | float        | 4        | 负数：-3.402823E+38到-1.401298E-45                                                             正数：   1.401298E-45到3.402823E+38 |\n|          | double(默认) | 8        | 负数：-1.797693E+308到-4.9000000E-324                                              正数：4.9000000E-324   到1.797693E+308 |\n| 字符类型 | char         | 2        | 0-65535                                                      |\n| 布尔类型 | boolean      | 1        | true，false                                                  |\n\n说明：\n\n​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。\n\n​\t在java中整数默认是int类型，浮点数默认是double类型。\n\n#### 变量（应用）\n\n##### 变量的定义\n\n变量：在程序运行过程中，其值可以发生改变的量。\n\n从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。\n\n变量的定义格式：\n\n```java\n数据类型 变量名 = 初始化值; // 声明变量并赋值\nint age = 18;\nSystem.out.println(age);\n```\n\n或者\n\n```java\n// 先声明，后赋值（使用前赋值即可）\n数据类型 变量名;\n变量名 = 初始化值;\ndouble money;\nmoney = 55.5;\nSystem.out.println(money);\n```\n\n还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。\n\n```java\nint a = 10, b = 20; // 定义int类型的变量a和b，中间使用逗号隔开\nSystem.out.println(a);\nSystem.out.println(b);\n\nint c,d; // 声明int类型的变量c和d，中间使用逗号隔开\nc = 30;\nd = 40;\nSystem.out.println(c);\nSystem.out.println(d);\n```\n\n变量的使用：通过变量名访问即可。\n\n##### 使用变量时的注意事项\n\n1. 在同一对花括号中，变量名不能重复。\n2. 变量在使用之前，必须初始化（赋值）。\n3. 定义long类型的变量时，需要在整数的后面加L（大小写均可，建议大写）。因为整数默认是int类型，整数太大可能超出int范围。\n4. 定义float类型的变量时，需要在小数的后面加F（大小写均可，建议大写）。因为浮点数的默认类型是double， double的取值范围是大于float的，类型不兼容。\n\n#### 标识符（记忆、理解）\n\n标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。\n\nJava中标识符的组成规则：\n\n​\t由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。\n\n​\t不能使用java中的关键字作为标识符。\t\n\n​\t标识符对大小写敏感（区分大小写）。\n\nJava中标识符的命名约定：\n\n​\t小驼峰式命名：变量名、方法名\n\n​\t\t首字母小写，从第二个单词开始每个单词的首字母大写。\n\n​\t大驼峰式命名：类名\n\n​\t\t每个单词的首字母都大写。\n\n​\t另外，标识符的命名最好可以做到见名知意\n\n​\t\t例如：username、studentNumber等。\n\n#### 类型转换（理解）\n\n在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。\n\n自动类型转换：\n\n​\t把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：\n\n```java\ndouble num = 10; // 将int类型的10直接赋值给double类型\nSystem.out.println(num); // 输出10.0\n```\n\n强制类型转换：\n\n​\t把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。\n\n​\t强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;\n\n​\t例如：\n\n```java\ndouble num1 = 5.5;\nint num2 = (int) num1; // 将double类型的num1强制转换为int类型\nSystem.out.println(num2); // 输出5（小数位直接舍弃）\n```\n\n说明：\n\n1. char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，'a'对应97。\n\n```java\nint a = 'a';\nSystem.out.println(a); // 将输出97\n```\n\n2. 整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。\n\n```java\nbyte b1 = 10;\nbyte b2 = 20;\nbyte b3 = b1 + b2; \n// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。\n// 修改为:\nint num = b1 + b2;\n// 或者：\nbyte b3 = (byte) (b1 + b2);\n```\n\n1. boolean类型不能与其他基本数据类型相互转换。\n\n## 运算符\n\n### 算术运算符（理解）\n\n#### 运算符和表达式\n\n运算符：对常量或者变量进行操作的符号\n\n表达式：用运算符把常量或者变量连接起来符合java语法的式子就可以称为表达式。\n\n​                    不同运算符连接的表达式体现的是不同类型的表达式。\n\n举例说明：\n\n```java\nint a = 10;\nint b = 20;\nint c = a + b;\n```\n\n  +：是运算符，并且是算术运算符。\n\n  a + b：是表达式，由于+是算术运算符，所以这个表达式叫算术表达式。\n\n####  算术运算符\n\n| 符号 | 作用 | 说明                         |\n| ---- | ---- | ---------------------------- |\n| +    | 加   | 参看小学一年级               |\n| -    | 减   | 参看小学一年级               |\n| *    | 乘   | 参看小学二年级，与“×”相同    |\n| /    | 除   | 参看小学二年级，与“÷”相同    |\n| %    | 取余 | 获取的是两个数据做除法的余数 |\n\n注意：\n\n/和%的区别：两个数据做除法，/取结果的商，%取结果的余数。\n\n整数操作只能得到整数，要想得到小数，必须有浮点数参与运算。\n\n~~~java\nint a = 10;\nint b = 3;\nSystem.out.println(a / b); // 输出结果3\nSystem.out.println(a % b); // 输出结果1\n~~~\n\n#### 字符的“+”操作\n\nchar类型参与算术运算，使用的是计算机底层对应的十进制数值。需要我们记住三个字符对应的数值：\n\n'a'  --  97\t\ta-z是连续的，所以'b'对应的数值是98，'c'是99，依次递加\n\n'A'  --  65\t\tA-Z是连续的，所以'B'对应的数值是66，'C'是67，依次递加\n\n'0'  --  48\t\t0-9是连续的，所以'1'对应的数值是49，'2'是50，依次递加\n\n~~~java\n// 可以通过使用字符与整数做算术运算，得出字符对应的数值是多少\nchar ch1 = 'a';\nSystem.out.println(ch1 + 1); // 输出98，97 + 1 = 98\n\nchar ch2 = 'A';\nSystem.out.println(ch2 + 1); // 输出66，65 + 1 = 66\n\nchar ch3 = '0';\nSystem.out.println(ch3 + 1); // 输出49，48 + 1 = 49\n~~~\n\n算术表达式中包含不同的基本数据类型的值的时候，整个算术表达式的类型会自动进行提升。\n\n提升规则：\n\nbyte类型，short类型和char类型将被提升到int类型，不管是否有其他类型参与运算。\n\n整个表达式的类型自动提升到与表达式中最高等级的操作数相同的类型\n\n​       等级顺序：byte,short,char --> int --> long --> float --> double\n\n例如：\n\n~~~java\nbyte b1 = 10;\nbyte b2 = 20;\n// byte b3 = b1 + b2; // 该行报错，因为byte类型参与算术运算会自动提示为int，int赋值给byte可能损失精度\nint i3 = b1 + b2; // 应该使用int接收\nbyte b3 = (byte) (b1 + b2); // 或者将结果强制转换为byte类型\n-------------------------------\nint num1 = 10;\ndouble num2 = 20.0;\ndouble num3 = num1 + num2; // 使用double接收，因为num1会自动提升为double类型\n~~~\n\ntips：正是由于上述原因，所以在程序开发中我们很少使用byte或者short类型定义整数。也很少会使用char类型定义字符，而使用字符串类型，更不会使用char类型做算术运算。\n\n\n\n#### 字符串的“+”操作\n\n当“+”操作中出现字符串时，这个”+”是字符串连接符，而不是算术运算。\n\n~~~java\nSystem.out.println(\"itheima\"+ 666); // 输出：itheima666\n~~~\n\n在”+”操作中，如果出现了字符串，就是连接运算符，否则就是算术运算。当连续进行“+”操作时，从左到右逐个执行。\n\n~~~java\nSystem.out.println(1 + 99 + \"年黑马\"); // 输出：100年黑马\nSystem.out.println(1 + 2 + \"itheima\" + 3 + 4); // 输出：3itheima34\n// 可以使用小括号改变运算的优先级 \nSystem.out.println(1 + 2 + \"itheima\" + (3 + 4)); // 输出：3itheima7\n~~~\n\n### 赋值运算符（应用）\n\n赋值运算符的作用是将一个表达式的值赋给左边，左边必须是可修改的，不能是常量。\n\n| 符号 | 作用       | 说明                  |\n| ---- | ---------- | --------------------- |\n| =    | 赋值       | a=10，将10赋值给变量a |\n| +=   | 加后赋值   | a+=b，将a+b的值给a    |\n| -=   | 减后赋值   | a-=b，将a-b的值给a    |\n| *=   | 乘后赋值   | a*=b，将a×b的值给a    |\n| /=   | 除后赋值   | a/=b，将a÷b的商给a    |\n| %=   | 取余后赋值 | a%=b，将a÷b的余数给a  |\n\n注意：\n\n扩展的赋值运算符隐含了强制类型转换。\n\n~~~java\nshort s = 10;\ns = s + 10; // 此行代码报出，因为运算中s提升为int类型，运算结果int赋值给short可能损失精度\n\ns += 10; // 此行代码没有问题，隐含了强制类型转换，相当于 s = (short) (s + 10);\n~~~\n\n### 自增自减运算符（理解）\n\n| 符号 | 作用 | 说明        |\n| ---- | ---- | ----------- |\n| ++   | 自增 | 变量的值加1 |\n| --   | 自减 | 变量的值减1 |\n\n注意事项：\n\n​\t++和-- 既可以放在变量的后边，也可以放在变量的前边。\n\n​\t单独使用的时候， ++和-- 无论是放在变量的前边还是后边，结果是一样的。\n\n​\t参与操作的时候，如果放在变量的后边，先拿变量参与操作，后拿变量做++或者--。\n\n​\t参与操作的时候，如果放在变量的前边，先拿变量做++或者--，后拿变量参与操作。\n\n​\t最常见的用法：单独使用。\n\n~~~java\nint i = 10;\ni++; // 单独使用\nSystem.out.println(\"i:\" + i); // i:11\n\nint j = 10;\n++j; // 单独使用\nSystem.out.println(\"j:\" + j); // j:11\n\nint x = 10;\nint y = x++; // 赋值运算，++在后边，所以是使用x原来的值赋值给y，x本身自增1\nSystem.out.println(\"x:\" + x + \", y:\" + y); // x:11，y:10\n\nint m = 10;\nint n = ++m; // 赋值运算，++在前边，所以是使用m自增后的值赋值给n，m本身自增1\nSystem.out.println(\"m:\" + m + \", m:\" + m); // m:11，m:11\n~~~\n\n练习：\n\n~~~java\nint x = 10;\nint y = x++ + x++ + x++;\nSystem.out.println(y); // y的值是多少？\n/*\n解析，三个表达式都是++在后，所以每次使用的都是自增前的值，但程序自左至右执行，所以第一次自增时，使用的是10进行计算，但第二次自增时，x的值已经自增到11了，所以第二次使用的是11，然后再次自增。。。\n所以整个式子应该是：int y = 10 + 11 + 12;\n输出结果为33。\n*/\n注意：通过此练习深刻理解自增和自减的规律，但实际开发中强烈建议不要写这样的代码！小心挨打！\n~~~\n\n### 关系运算符（应用）\n\n关系运算符有6种关系，分别为小于、小于等于、大于、等于、大于等于、不等于。\n\n| 符号 | 说明                                                    |\n| ---- | ------------------------------------------------------- |\n| ==   | a==b，判断a和b的值是否相等，成立为true，不成立为false   |\n| !=   | a!=b，判断a和b的值是否不相等，成立为true，不成立为false |\n| >    | a>b，判断a是否大于b，成立为true，不成立为false          |\n| >=   | a>=b，判断a是否大于等于b，成立为true，不成立为false     |\n| <    | a<b，判断a是否小于b，成立为true，不成立为false          |\n| <=   | a<=b，判断a是否小于等于b，成立为true，不成立为false     |\n\n注意事项：\n\n​\t关系运算符的结果都是boolean类型，要么是true，要么是false。\n\n​\t千万不要把“==”误写成“=”，\"==\"是判断是否相等的关系，\"=\"是赋值。\n\n~~~java\nint a = 10;\nint b = 20;\nSystem.out.println(a == b); // false\nSystem.out.println(a != b); // true\nSystem.out.println(a > b); // false\nSystem.out.println(a >= b); // false\nSystem.out.println(a < b); // true\nSystem.out.println(a <= b); // true\n\n// 关系运算的结果肯定是boolean类型，所以也可以将运算结果赋值给boolean类型的变量\nboolean flag = a > b;\nSystem.out.println(flag); // 输出false\n~~~\n\n### 逻辑运算符（应用）\n\n逻辑运算符把各个运算的关系表达式连接起来组成一个复杂的逻辑表达式，以判断程序中的表达式是否成立，判断的结果是 true 或 false。\n\n| 符号 | 作用     | 说明                                         |\n| ---- | -------- | -------------------------------------------- |\n| &    | 逻辑与   | a&b，a和b都是true，结果为true，否则为false   |\n| \\|   | 逻辑或   | a\\|b，a和b都是false，结果为false，否则为true |\n| ^    | 逻辑异或 | a^b，a和b结果不同为true，相同为false         |\n| !    | 逻辑非   | !a，结果和a的结果正好相反                    |\n\n~~~java\n//定义变量\nint i = 10;\nint j = 20;\nint k = 30;\n\n//& “与”，并且的关系，只要表达式中有一个值为false，结果即为false\nSystem.out.println((i > j) & (i > k)); //false & false,输出false\nSystem.out.println((i < j) & (i > k)); //true & false,输出false\nSystem.out.println((i > j) & (i < k)); //false & true,输出false\nSystem.out.println((i < j) & (i < k)); //true & true,输出true\nSystem.out.println(\"--------\");\n\n//| “或”，或者的关系，只要表达式中有一个值为true，结果即为true\nSystem.out.println((i > j) | (i > k)); //false | false,输出false\nSystem.out.println((i < j) | (i > k)); //true | false,输出true\nSystem.out.println((i > j) | (i < k)); //false | true,输出true\nSystem.out.println((i < j) | (i < k)); //true | true,输出true\nSystem.out.println(\"--------\");\n\n//^ “异或”，相同为false，不同为true\nSystem.out.println((i > j) ^ (i > k)); //false ^ false,输出false\nSystem.out.println((i < j) ^ (i > k)); //true ^ false,输出true\nSystem.out.println((i > j) ^ (i < k)); //false ^ true,输出true\nSystem.out.println((i < j) ^ (i < k)); //true ^ true,输出false\nSystem.out.println(\"--------\");\n\n//! “非”，取反\nSystem.out.println((i > j)); //false\nSystem.out.println(!(i > j)); //!false，,输出true\n~~~\n\n#### 短路逻辑运算符\n\n| 符号 | 作用   | 说明                         |\n| ---- | ------ | ---------------------------- |\n| &&   | 短路与 | 作用和&相同，但是有短路效果  |\n| \\|\\| | 短路或 | 作用和\\|相同，但是有短路效果 |\n\n在逻辑与运算中，只要有一个表达式的值为false，那么结果就可以判定为false了，没有必要将所有表达式的值都计算出来，短路与操作就有这样的效果，可以提高效率。同理在逻辑或运算中，一旦发现值为true，右边的表达式将不再参与运算。\n\n- 逻辑与&，无论左边真假，右边都要执行。\n\n- 短路与&&，如果左边为真，右边执行；如果左边为假，右边不执行。\n\n- 逻辑或|，无论左边真假，右边都要执行。\n\n- 短路或||，如果左边为假，右边执行；如果左边为真，右边不执行。\n\n~~~java\nint x = 3;\nint y = 4;\nSystem.out.println((x++ > 4) & (y++ > 5)); // 两个表达都会运算\nSystem.out.println(x); // 4\nSystem.out.println(y); // 5\n\nSystem.out.println((x++ > 4) && (y++ > 5)); // 左边已经可以确定结果为false，右边不参与运算\nSystem.out.println(x); // 4\nSystem.out.println(y); // 4\n~~~\n\n### 三元运算符（理解）\n\n三元运算符语法格式：\n\n~~~java\n关系表达式 ? 表达式1 : 表达式2;\n~~~\n\n解释：问号前面的位置是判断的条件，判断结果为boolean型，为true时调用表达式1，为false时调用表达式2。其逻辑为：如果条件表达式成立或者满足则执行表达式1，否则执行第二个。\n\n举例：\n\n~~~java\nint a = 10;\nint b = 20;\nint c = a > b ? a : b; // 判断 a>b 是否为真，如果为真取a的值，如果为假，取b的值\n~~~\n\n三元运算符案例：\n\n1、需求：动物园里有两只老虎，已知两只老虎的体重分别为180kg、200kg，请用程序实现判断两只老虎的体重是否相同。\n\n~~~java\npublic class OperatorTest01 {\n\tpublic static void main(String[] args) {\n\t\t//1：定义两个变量用于保存老虎的体重，单位为kg，这里仅仅体现数值即可。\n\t\tint weight1 = 180;\n\t\tint weight2 = 200;\t\n\t\t//2：用三元运算符实现老虎体重的判断，体重相同，返回true，否则，返回false。\n\t\tboolean b = weight1 == weight2 ? true : false;\t\n\t\t//3：输出结果\n\t\tSystem.out.println(\"b:\" + b);\n\t}\n}\n~~~\n\n2、需求：一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm，请用程序实现获取这三个和尚的最高身高。\n\n~~~java\npublic class OperatorTest02 {\n\tpublic static void main(String[] args) {\n\t\t//1：定义三个变量用于保存和尚的身高，单位为cm，这里仅仅体现数值即可。\n\t\tint height1 = 150;\n\t\tint height2 = 210;\n\t\tint height3 = 165;\t\n\t\t//2：用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。\n\t\tint tempHeight = height1 > height2 ? height1 : height2;\t\t\n\t\t//3：用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。\n\t\tint maxHeight = tempHeight > height3 ? tempHeight : height3;\t\n\t\t//4：输出结果\n\t\tSystem.out.println(\"maxHeight:\" + maxHeight);\n\t}\n}\n~~~\n\n## 数据输入（应用）\n\n我们可以通过 Scanner 类来获取用户的输入。使用步骤如下：\n\n1、导包。Scanner 类在java.util包下，所以需要将该类导入。导包的语句需要定义在类的上面。\n\n~~~java\nimport java.util.Scanner; \n~~~\n\n2、创建Scanner对象。\n\n~~~java\nScanner sc = new Scanner(System.in);// 创建Scanner对象，sc表示变量名，其他均不可变\n~~~\n\n3、接收数据\n\n ~~~java\nint i = sc.nextInt(); // 表示将键盘录入的值作为int数返回。\n ~~~\n\n示例：\n\n~~~java\nimport java.util.Scanner;\npublic class ScannerDemo {\n\tpublic static void main(String[] args) {\n\t\t//创建对象\n\t\tScanner sc = new Scanner(System.in);\n\t\t//接收数据\n\t\tint x = sc.nextInt();\n\t\t//输出数据\n\t\tSystem.out.println(\"x:\" + x);\n\t}\n}\n~~~\n\n改写三个和尚案例，数据使用键盘录入。\n\n~~~java\nimport java.util.Scanner;\npublic class ScannerTest {\n\tpublic static void main(String[] args) {\n\t\t//身高未知，采用键盘录入实现。首先导包，然后创建对象。\n\t\tScanner sc = new Scanner(System.in);\n\t\t//键盘录入三个身高分别赋值给三个变量。\n\t\tSystem.out.println(\"请输入第一个和尚的身高：\");\n\t\tint height1 = sc.nextInt();\n\t\tSystem.out.println(\"请输入第二个和尚的身高：\");\n\t\tint height2 = sc.nextInt();\n\t\tSystem.out.println(\"请输入第三个和尚的身高：\");\n\t\tint height3 = sc.nextInt();\n\t\t//用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。\n\t\tint tempHeight = height1 > height2 ? height1 : height2;\n\t\t//用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。\n\t\tint maxHeight = tempHeight > height3 ? tempHeight : height3;\n\t\t//输出结果。\n\t\tSystem.out.println(\"这三个和尚中身高最高的是：\" + maxHeight +\"cm\");\n\t}\n}\n~~~\n\n## 流程控制语句（应用）\n\n在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。\n\n### 流程控制语句分类\n\n​\t顺序结构\n\n​\t分支结构(if, switch)\n\n​\t循环结构(for, while, do…while)\n\n### 顺序结构\n\n顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。\n\n### 分支结构之if语句\n\n#### if语句格式1\n\n~~~java\n格式：\nif (关系表达式) {\n    语句体;\t\n}\n~~~\n\n执行流程：\n\n①首先计算关系表达式的值\n\n②如果关系表达式的值为true就执行语句体\n\n③如果关系表达式的值为false就不执行语句体\n\n④继续执行后面的语句内容\n\n示例：\n\n~~~java\npublic class IfDemo {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\t\n\t\t//定义两个变量\n\t\tint a = 10;\n\t\tint b = 20;\t\n\t\t//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b\n\t\tif(a == b) {\n\t\t\tSystem.out.println(\"a等于b\");\n\t\t}\t\t\n\t\t//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c\n\t\tint c = 10;\n\t\tif(a == c) {\n\t\t\tSystem.out.println(\"a等于c\");\n\t\t}\t\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n~~~\n\n#### if语句格式2\n\n~~~java\n格式：\nif (关系表达式) {\n    语句体1;\t\n} else {\n    语句体2;\t\n}\n~~~\n\n执行流程：\n\n①首先计算关系表达式的值\n\n②如果关系表达式的值为true就执行语句体1\n\n③如果关系表达式的值为false就执行语句体2\n\n④继续执行后面的语句内容\n\n\n\n示例：\n\n~~~java\npublic class IfDemo02 {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\t\t\n\t\t//定义两个变量\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tb = 5;\t\n\t\t//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b\n\t\tif(a > b) {\n\t\t\tSystem.out.println(\"a的值大于b\");\n\t\t} else {\n\t\t\tSystem.out.println(\"a的值不大于b\");\n\t\t}\t\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n~~~\n\nif语句案例：奇偶数\n\n需求：任意给出一个整数，请用程序实现判断该整数是奇数还是偶数，并在控制台输出该整数是奇数还是偶数。\n\n分析：\n\n​\t①为了体现任意给出一个整数，采用键盘录入一个数据\n\n​\t②判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构\n\n​\t③判断是否偶数需要使用取余运算符实现该功能 number % 2 == 0\n\n​\t④根据判定情况，在控制台输出对应的内容\n\n~~~java\nimport java.util.Scanner;\npublic class IfTest01 {\n\tpublic static void main(String[] args) {\n\t\t//为了体现任意给出一个整数，采用键盘录入一个数据。(导包，创建对象，接收数据)\n\t\tScanner sc = new Scanner(System.in);\t\t\n\t\tSystem.out.println(\"请输入一个整数：\");\n\t\tint number = sc.nextInt();\t\n\t\t//判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构\t\t\n\t\t//判断是否偶数需要使用取余运算符实现该功能 number % 2 == 0\n\t\t//根据判定情况，在控制台输出对应的内容\n\t\tif(number%2 == 0) {\n\t\t\tSystem.out.println(number + \"是偶数\");\n\t\t} else {\n\t\t\tSystem.out.println(number + \"是奇数\");\n\t\t}\t\n\t}\n}\n~~~\n\n#### if语句格式3\n\n~~~java\n格式：\nif (关系表达式1) {\n    语句体1;\t\n} else if (关系表达式2) {\n    语句体2;\t\n} \n…\nelse {\n    语句体n+1;\n}\n~~~\n\n执行流程：\n\n①首先计算关系表达式1的值\n\n②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值\n\n③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值\n\n④…\n\n⑤如果没有任何关系表达式为true，就执行语句体n+1。\n\n![1545616667104](D:\\Desktop\\img\\1545616667104.png)\n\n示例：键盘录入一个星期数(1,2,...7)，输出对应的星期一，星期二，...星期日\n\n~~~java\nimport java.util.Scanner;\npublic class IfDemo03 {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\n\t\t// 需求：键盘录入一个星期数(1,2,...7)，输出对应的星期一，星期二，...星期日\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"请输入一个星期数(1-7)：\");\n\t\tint week = sc.nextInt();\n\t\tif(week == 1) {\n\t\t\tSystem.out.println(\"星期一\");\n\t\t} else if(week == 2) {\n\t\t\tSystem.out.println(\"星期二\");\n\t\t} else if(week == 3) {\n\t\t\tSystem.out.println(\"星期三\");\n\t\t} else if(week == 4) {\n\t\t\tSystem.out.println(\"星期四\");\n\t\t} else if(week == 5) {\n\t\t\tSystem.out.println(\"星期五\");\n\t\t} else if(week == 6) {\n\t\t\tSystem.out.println(\"星期六\");\n\t\t} else {\n\t\t\tSystem.out.println(\"星期日\");\n\t\t}\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n~~~\n\nif语句格式3案例：\n\n需求：小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。\n\n分析：\n\n​\t①小明的考试成绩未知，可以使用键盘录入的方式获取值\n\n​\t②由于奖励种类较多，属于多种判断，采用if...else...if格式实现\n\n​\t③为每种判断设置对应的条件\n\n​\t④为每种判断设置对应的奖励\n\n~~~java\nimport java.util.Scanner;\npublic class IfTest02 {\n\tpublic static void main(String[] args) {\n\t\t//小明的考试成绩未知，可以使用键盘录入的方式获取值\n\t\tScanner sc = new Scanner(System.in);\t\n\t\tSystem.out.println(\"请输入一个分数：\");\n\t\tint score = sc.nextInt();\n\t\t//由于奖励种类较多，属于多种判断，采用if...else...if格式实现\n\t\t//为每种判断设置对应的条件\n\t\t//为每种判断设置对应的奖励\t\n\t\t//数据测试：正确数据，边界数据，错误数据\n\t\tif(score>100 || score<0) {\n\t\t\tSystem.out.println(\"你输入的分数有误\");\n\t\t} else if(score>=95 && score<=100) {\n\t\t\tSystem.out.println(\"山地自行车一辆\");\n\t\t} else if(score>=90 && score<=94) {\n\t\t\tSystem.out.println(\"游乐场玩一次\");\n\t\t} else if(score>=80 && score<=89) {\n\t\t\tSystem.out.println(\"变形金刚玩具一个\");\n\t\t} else {\n\t\t\tSystem.out.println(\"胖揍一顿\");\n\t\t}\n\t}\n}\n~~~\n","source":"_posts/JAVA学习1.md","raw":"---\ntitle: JAVA学习\ndate: 2022-08-16 19:08:53\ntags: JAVA\ncategories: JAVA\ncomments: false\ntop_img: /img/java.jpg\ncover: /img/java.jpg\n---\n\n# JAVA基础知识\n\n## JAVA基础语法\n\n#### 注释（理解）\n\n注释是对代码的解释和说明文字，可以提高程序的可读性，因此在程序中添加必要的注释文字十分重要。Java中的注释分为三种：\n\n单行注释。单行注释的格式是使用//，从//开始至本行结尾的文字将作为注释文字。\n\n~~~java\n// 这是单行注释文字\n~~~\n\n多行注释。多行注释的格式是使用/* 和 */将一段较长的注释括起来。\n\n~~~java\n/*\n这是多行注释文字\n这是多行注释文字\n这是多行注释文字\n*/\n注意：多行注释不能嵌套使用。\n~~~\n\n文档注释。文档注释以`/**`开始，以`*/`结束。（以后讲）\n\n#### 关键字（理解）\n\n关键字是指被java语言赋予了特殊含义的单词。\n\n关键字的特点：\n\n​\t关键字的字母全部小写。\n\n​\t常用的代码编辑器对关键字都有高亮显示，比如现在我们能看到的public、class、static等。\n\n#### 常量（应用）\n\n常量：在程序运行过程中，其值不可以发生改变的量。\n\nJava中的常量分类：\n\n​\t字符串常量  用双引号括起来的多个字符（可以包含0个、一个或多个），例如\"a\"、\"abc\"、\"中国\"等\n\n​\t整数常量  整数，例如：-10、0、88等\n\n​\t小数常量  小数，例如：-5.5、1.0、88.88等\n\n​\t字符常量  用单引号括起来的一个字符，例如：'a'、'5'、'B'、'中'等\n\n​\t布尔常量  布尔值，表示真假，只有两个值true和false\n\n​\t空常量  一个特殊的值，空值，值为null\n\n除空常量外，其他常量均可使用输出语句直接输出。\n\n~~~java\npublic class Demo {\n    public static void main(String[] args) {\n        System.out.println(10); // 输出一个整数\n        System.out.println(5.5); // 输出一个小数\n        System.out.println('a'); // 输出一个字符\n        System.out.println(true); // 输出boolean值true\n        System.out.println(\"欢迎来到黑马程序员\"); // 输出字符串\n    }\n}\n~~~\n\n\n\n#### 数据类型（记忆、应用）\n\n##### 计算机存储单元\n\n我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，\n\n通常用大写字母”B”表示，字节是由连续的8个位组成。\n\n除了字节外还有一些常用的存储单位，其换算单位如下：\n\n1B（字节） = 8bit\n\n1KB = 1024B\n\n1MB = 1024KB\n\n1GB = 1024MB\n\n1TB = 1024GB\n\n##### Java中的数据类型\n\nJava是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。\n\nJava中的基本数据类型：\n\n| 数据类型 | 关键字       | 内存占用 | 取值范围                                                     |\n| :------- | ------------ | -------- | :----------------------------------------------------------- |\n| 整数类型 | byte         | 1        | -128~127                                                     |\n|          | short        | 2        | -32768~32767                                                 |\n|          | int(默认)    | 4        | -2的31次方到2的31次方-1                                      |\n|          | long         | 8        | -2的63次方到2的63次方-1                                      |\n| 浮点类型 | float        | 4        | 负数：-3.402823E+38到-1.401298E-45                                                             正数：   1.401298E-45到3.402823E+38 |\n|          | double(默认) | 8        | 负数：-1.797693E+308到-4.9000000E-324                                              正数：4.9000000E-324   到1.797693E+308 |\n| 字符类型 | char         | 2        | 0-65535                                                      |\n| 布尔类型 | boolean      | 1        | true，false                                                  |\n\n说明：\n\n​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。\n\n​\t在java中整数默认是int类型，浮点数默认是double类型。\n\n#### 变量（应用）\n\n##### 变量的定义\n\n变量：在程序运行过程中，其值可以发生改变的量。\n\n从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。\n\n变量的定义格式：\n\n```java\n数据类型 变量名 = 初始化值; // 声明变量并赋值\nint age = 18;\nSystem.out.println(age);\n```\n\n或者\n\n```java\n// 先声明，后赋值（使用前赋值即可）\n数据类型 变量名;\n变量名 = 初始化值;\ndouble money;\nmoney = 55.5;\nSystem.out.println(money);\n```\n\n还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。\n\n```java\nint a = 10, b = 20; // 定义int类型的变量a和b，中间使用逗号隔开\nSystem.out.println(a);\nSystem.out.println(b);\n\nint c,d; // 声明int类型的变量c和d，中间使用逗号隔开\nc = 30;\nd = 40;\nSystem.out.println(c);\nSystem.out.println(d);\n```\n\n变量的使用：通过变量名访问即可。\n\n##### 使用变量时的注意事项\n\n1. 在同一对花括号中，变量名不能重复。\n2. 变量在使用之前，必须初始化（赋值）。\n3. 定义long类型的变量时，需要在整数的后面加L（大小写均可，建议大写）。因为整数默认是int类型，整数太大可能超出int范围。\n4. 定义float类型的变量时，需要在小数的后面加F（大小写均可，建议大写）。因为浮点数的默认类型是double， double的取值范围是大于float的，类型不兼容。\n\n#### 标识符（记忆、理解）\n\n标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。\n\nJava中标识符的组成规则：\n\n​\t由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。\n\n​\t不能使用java中的关键字作为标识符。\t\n\n​\t标识符对大小写敏感（区分大小写）。\n\nJava中标识符的命名约定：\n\n​\t小驼峰式命名：变量名、方法名\n\n​\t\t首字母小写，从第二个单词开始每个单词的首字母大写。\n\n​\t大驼峰式命名：类名\n\n​\t\t每个单词的首字母都大写。\n\n​\t另外，标识符的命名最好可以做到见名知意\n\n​\t\t例如：username、studentNumber等。\n\n#### 类型转换（理解）\n\n在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。\n\n自动类型转换：\n\n​\t把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：\n\n```java\ndouble num = 10; // 将int类型的10直接赋值给double类型\nSystem.out.println(num); // 输出10.0\n```\n\n强制类型转换：\n\n​\t把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。\n\n​\t强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;\n\n​\t例如：\n\n```java\ndouble num1 = 5.5;\nint num2 = (int) num1; // 将double类型的num1强制转换为int类型\nSystem.out.println(num2); // 输出5（小数位直接舍弃）\n```\n\n说明：\n\n1. char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，'a'对应97。\n\n```java\nint a = 'a';\nSystem.out.println(a); // 将输出97\n```\n\n2. 整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。\n\n```java\nbyte b1 = 10;\nbyte b2 = 20;\nbyte b3 = b1 + b2; \n// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。\n// 修改为:\nint num = b1 + b2;\n// 或者：\nbyte b3 = (byte) (b1 + b2);\n```\n\n1. boolean类型不能与其他基本数据类型相互转换。\n\n## 运算符\n\n### 算术运算符（理解）\n\n#### 运算符和表达式\n\n运算符：对常量或者变量进行操作的符号\n\n表达式：用运算符把常量或者变量连接起来符合java语法的式子就可以称为表达式。\n\n​                    不同运算符连接的表达式体现的是不同类型的表达式。\n\n举例说明：\n\n```java\nint a = 10;\nint b = 20;\nint c = a + b;\n```\n\n  +：是运算符，并且是算术运算符。\n\n  a + b：是表达式，由于+是算术运算符，所以这个表达式叫算术表达式。\n\n####  算术运算符\n\n| 符号 | 作用 | 说明                         |\n| ---- | ---- | ---------------------------- |\n| +    | 加   | 参看小学一年级               |\n| -    | 减   | 参看小学一年级               |\n| *    | 乘   | 参看小学二年级，与“×”相同    |\n| /    | 除   | 参看小学二年级，与“÷”相同    |\n| %    | 取余 | 获取的是两个数据做除法的余数 |\n\n注意：\n\n/和%的区别：两个数据做除法，/取结果的商，%取结果的余数。\n\n整数操作只能得到整数，要想得到小数，必须有浮点数参与运算。\n\n~~~java\nint a = 10;\nint b = 3;\nSystem.out.println(a / b); // 输出结果3\nSystem.out.println(a % b); // 输出结果1\n~~~\n\n#### 字符的“+”操作\n\nchar类型参与算术运算，使用的是计算机底层对应的十进制数值。需要我们记住三个字符对应的数值：\n\n'a'  --  97\t\ta-z是连续的，所以'b'对应的数值是98，'c'是99，依次递加\n\n'A'  --  65\t\tA-Z是连续的，所以'B'对应的数值是66，'C'是67，依次递加\n\n'0'  --  48\t\t0-9是连续的，所以'1'对应的数值是49，'2'是50，依次递加\n\n~~~java\n// 可以通过使用字符与整数做算术运算，得出字符对应的数值是多少\nchar ch1 = 'a';\nSystem.out.println(ch1 + 1); // 输出98，97 + 1 = 98\n\nchar ch2 = 'A';\nSystem.out.println(ch2 + 1); // 输出66，65 + 1 = 66\n\nchar ch3 = '0';\nSystem.out.println(ch3 + 1); // 输出49，48 + 1 = 49\n~~~\n\n算术表达式中包含不同的基本数据类型的值的时候，整个算术表达式的类型会自动进行提升。\n\n提升规则：\n\nbyte类型，short类型和char类型将被提升到int类型，不管是否有其他类型参与运算。\n\n整个表达式的类型自动提升到与表达式中最高等级的操作数相同的类型\n\n​       等级顺序：byte,short,char --> int --> long --> float --> double\n\n例如：\n\n~~~java\nbyte b1 = 10;\nbyte b2 = 20;\n// byte b3 = b1 + b2; // 该行报错，因为byte类型参与算术运算会自动提示为int，int赋值给byte可能损失精度\nint i3 = b1 + b2; // 应该使用int接收\nbyte b3 = (byte) (b1 + b2); // 或者将结果强制转换为byte类型\n-------------------------------\nint num1 = 10;\ndouble num2 = 20.0;\ndouble num3 = num1 + num2; // 使用double接收，因为num1会自动提升为double类型\n~~~\n\ntips：正是由于上述原因，所以在程序开发中我们很少使用byte或者short类型定义整数。也很少会使用char类型定义字符，而使用字符串类型，更不会使用char类型做算术运算。\n\n\n\n#### 字符串的“+”操作\n\n当“+”操作中出现字符串时，这个”+”是字符串连接符，而不是算术运算。\n\n~~~java\nSystem.out.println(\"itheima\"+ 666); // 输出：itheima666\n~~~\n\n在”+”操作中，如果出现了字符串，就是连接运算符，否则就是算术运算。当连续进行“+”操作时，从左到右逐个执行。\n\n~~~java\nSystem.out.println(1 + 99 + \"年黑马\"); // 输出：100年黑马\nSystem.out.println(1 + 2 + \"itheima\" + 3 + 4); // 输出：3itheima34\n// 可以使用小括号改变运算的优先级 \nSystem.out.println(1 + 2 + \"itheima\" + (3 + 4)); // 输出：3itheima7\n~~~\n\n### 赋值运算符（应用）\n\n赋值运算符的作用是将一个表达式的值赋给左边，左边必须是可修改的，不能是常量。\n\n| 符号 | 作用       | 说明                  |\n| ---- | ---------- | --------------------- |\n| =    | 赋值       | a=10，将10赋值给变量a |\n| +=   | 加后赋值   | a+=b，将a+b的值给a    |\n| -=   | 减后赋值   | a-=b，将a-b的值给a    |\n| *=   | 乘后赋值   | a*=b，将a×b的值给a    |\n| /=   | 除后赋值   | a/=b，将a÷b的商给a    |\n| %=   | 取余后赋值 | a%=b，将a÷b的余数给a  |\n\n注意：\n\n扩展的赋值运算符隐含了强制类型转换。\n\n~~~java\nshort s = 10;\ns = s + 10; // 此行代码报出，因为运算中s提升为int类型，运算结果int赋值给short可能损失精度\n\ns += 10; // 此行代码没有问题，隐含了强制类型转换，相当于 s = (short) (s + 10);\n~~~\n\n### 自增自减运算符（理解）\n\n| 符号 | 作用 | 说明        |\n| ---- | ---- | ----------- |\n| ++   | 自增 | 变量的值加1 |\n| --   | 自减 | 变量的值减1 |\n\n注意事项：\n\n​\t++和-- 既可以放在变量的后边，也可以放在变量的前边。\n\n​\t单独使用的时候， ++和-- 无论是放在变量的前边还是后边，结果是一样的。\n\n​\t参与操作的时候，如果放在变量的后边，先拿变量参与操作，后拿变量做++或者--。\n\n​\t参与操作的时候，如果放在变量的前边，先拿变量做++或者--，后拿变量参与操作。\n\n​\t最常见的用法：单独使用。\n\n~~~java\nint i = 10;\ni++; // 单独使用\nSystem.out.println(\"i:\" + i); // i:11\n\nint j = 10;\n++j; // 单独使用\nSystem.out.println(\"j:\" + j); // j:11\n\nint x = 10;\nint y = x++; // 赋值运算，++在后边，所以是使用x原来的值赋值给y，x本身自增1\nSystem.out.println(\"x:\" + x + \", y:\" + y); // x:11，y:10\n\nint m = 10;\nint n = ++m; // 赋值运算，++在前边，所以是使用m自增后的值赋值给n，m本身自增1\nSystem.out.println(\"m:\" + m + \", m:\" + m); // m:11，m:11\n~~~\n\n练习：\n\n~~~java\nint x = 10;\nint y = x++ + x++ + x++;\nSystem.out.println(y); // y的值是多少？\n/*\n解析，三个表达式都是++在后，所以每次使用的都是自增前的值，但程序自左至右执行，所以第一次自增时，使用的是10进行计算，但第二次自增时，x的值已经自增到11了，所以第二次使用的是11，然后再次自增。。。\n所以整个式子应该是：int y = 10 + 11 + 12;\n输出结果为33。\n*/\n注意：通过此练习深刻理解自增和自减的规律，但实际开发中强烈建议不要写这样的代码！小心挨打！\n~~~\n\n### 关系运算符（应用）\n\n关系运算符有6种关系，分别为小于、小于等于、大于、等于、大于等于、不等于。\n\n| 符号 | 说明                                                    |\n| ---- | ------------------------------------------------------- |\n| ==   | a==b，判断a和b的值是否相等，成立为true，不成立为false   |\n| !=   | a!=b，判断a和b的值是否不相等，成立为true，不成立为false |\n| >    | a>b，判断a是否大于b，成立为true，不成立为false          |\n| >=   | a>=b，判断a是否大于等于b，成立为true，不成立为false     |\n| <    | a<b，判断a是否小于b，成立为true，不成立为false          |\n| <=   | a<=b，判断a是否小于等于b，成立为true，不成立为false     |\n\n注意事项：\n\n​\t关系运算符的结果都是boolean类型，要么是true，要么是false。\n\n​\t千万不要把“==”误写成“=”，\"==\"是判断是否相等的关系，\"=\"是赋值。\n\n~~~java\nint a = 10;\nint b = 20;\nSystem.out.println(a == b); // false\nSystem.out.println(a != b); // true\nSystem.out.println(a > b); // false\nSystem.out.println(a >= b); // false\nSystem.out.println(a < b); // true\nSystem.out.println(a <= b); // true\n\n// 关系运算的结果肯定是boolean类型，所以也可以将运算结果赋值给boolean类型的变量\nboolean flag = a > b;\nSystem.out.println(flag); // 输出false\n~~~\n\n### 逻辑运算符（应用）\n\n逻辑运算符把各个运算的关系表达式连接起来组成一个复杂的逻辑表达式，以判断程序中的表达式是否成立，判断的结果是 true 或 false。\n\n| 符号 | 作用     | 说明                                         |\n| ---- | -------- | -------------------------------------------- |\n| &    | 逻辑与   | a&b，a和b都是true，结果为true，否则为false   |\n| \\|   | 逻辑或   | a\\|b，a和b都是false，结果为false，否则为true |\n| ^    | 逻辑异或 | a^b，a和b结果不同为true，相同为false         |\n| !    | 逻辑非   | !a，结果和a的结果正好相反                    |\n\n~~~java\n//定义变量\nint i = 10;\nint j = 20;\nint k = 30;\n\n//& “与”，并且的关系，只要表达式中有一个值为false，结果即为false\nSystem.out.println((i > j) & (i > k)); //false & false,输出false\nSystem.out.println((i < j) & (i > k)); //true & false,输出false\nSystem.out.println((i > j) & (i < k)); //false & true,输出false\nSystem.out.println((i < j) & (i < k)); //true & true,输出true\nSystem.out.println(\"--------\");\n\n//| “或”，或者的关系，只要表达式中有一个值为true，结果即为true\nSystem.out.println((i > j) | (i > k)); //false | false,输出false\nSystem.out.println((i < j) | (i > k)); //true | false,输出true\nSystem.out.println((i > j) | (i < k)); //false | true,输出true\nSystem.out.println((i < j) | (i < k)); //true | true,输出true\nSystem.out.println(\"--------\");\n\n//^ “异或”，相同为false，不同为true\nSystem.out.println((i > j) ^ (i > k)); //false ^ false,输出false\nSystem.out.println((i < j) ^ (i > k)); //true ^ false,输出true\nSystem.out.println((i > j) ^ (i < k)); //false ^ true,输出true\nSystem.out.println((i < j) ^ (i < k)); //true ^ true,输出false\nSystem.out.println(\"--------\");\n\n//! “非”，取反\nSystem.out.println((i > j)); //false\nSystem.out.println(!(i > j)); //!false，,输出true\n~~~\n\n#### 短路逻辑运算符\n\n| 符号 | 作用   | 说明                         |\n| ---- | ------ | ---------------------------- |\n| &&   | 短路与 | 作用和&相同，但是有短路效果  |\n| \\|\\| | 短路或 | 作用和\\|相同，但是有短路效果 |\n\n在逻辑与运算中，只要有一个表达式的值为false，那么结果就可以判定为false了，没有必要将所有表达式的值都计算出来，短路与操作就有这样的效果，可以提高效率。同理在逻辑或运算中，一旦发现值为true，右边的表达式将不再参与运算。\n\n- 逻辑与&，无论左边真假，右边都要执行。\n\n- 短路与&&，如果左边为真，右边执行；如果左边为假，右边不执行。\n\n- 逻辑或|，无论左边真假，右边都要执行。\n\n- 短路或||，如果左边为假，右边执行；如果左边为真，右边不执行。\n\n~~~java\nint x = 3;\nint y = 4;\nSystem.out.println((x++ > 4) & (y++ > 5)); // 两个表达都会运算\nSystem.out.println(x); // 4\nSystem.out.println(y); // 5\n\nSystem.out.println((x++ > 4) && (y++ > 5)); // 左边已经可以确定结果为false，右边不参与运算\nSystem.out.println(x); // 4\nSystem.out.println(y); // 4\n~~~\n\n### 三元运算符（理解）\n\n三元运算符语法格式：\n\n~~~java\n关系表达式 ? 表达式1 : 表达式2;\n~~~\n\n解释：问号前面的位置是判断的条件，判断结果为boolean型，为true时调用表达式1，为false时调用表达式2。其逻辑为：如果条件表达式成立或者满足则执行表达式1，否则执行第二个。\n\n举例：\n\n~~~java\nint a = 10;\nint b = 20;\nint c = a > b ? a : b; // 判断 a>b 是否为真，如果为真取a的值，如果为假，取b的值\n~~~\n\n三元运算符案例：\n\n1、需求：动物园里有两只老虎，已知两只老虎的体重分别为180kg、200kg，请用程序实现判断两只老虎的体重是否相同。\n\n~~~java\npublic class OperatorTest01 {\n\tpublic static void main(String[] args) {\n\t\t//1：定义两个变量用于保存老虎的体重，单位为kg，这里仅仅体现数值即可。\n\t\tint weight1 = 180;\n\t\tint weight2 = 200;\t\n\t\t//2：用三元运算符实现老虎体重的判断，体重相同，返回true，否则，返回false。\n\t\tboolean b = weight1 == weight2 ? true : false;\t\n\t\t//3：输出结果\n\t\tSystem.out.println(\"b:\" + b);\n\t}\n}\n~~~\n\n2、需求：一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm，请用程序实现获取这三个和尚的最高身高。\n\n~~~java\npublic class OperatorTest02 {\n\tpublic static void main(String[] args) {\n\t\t//1：定义三个变量用于保存和尚的身高，单位为cm，这里仅仅体现数值即可。\n\t\tint height1 = 150;\n\t\tint height2 = 210;\n\t\tint height3 = 165;\t\n\t\t//2：用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。\n\t\tint tempHeight = height1 > height2 ? height1 : height2;\t\t\n\t\t//3：用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。\n\t\tint maxHeight = tempHeight > height3 ? tempHeight : height3;\t\n\t\t//4：输出结果\n\t\tSystem.out.println(\"maxHeight:\" + maxHeight);\n\t}\n}\n~~~\n\n## 数据输入（应用）\n\n我们可以通过 Scanner 类来获取用户的输入。使用步骤如下：\n\n1、导包。Scanner 类在java.util包下，所以需要将该类导入。导包的语句需要定义在类的上面。\n\n~~~java\nimport java.util.Scanner; \n~~~\n\n2、创建Scanner对象。\n\n~~~java\nScanner sc = new Scanner(System.in);// 创建Scanner对象，sc表示变量名，其他均不可变\n~~~\n\n3、接收数据\n\n ~~~java\nint i = sc.nextInt(); // 表示将键盘录入的值作为int数返回。\n ~~~\n\n示例：\n\n~~~java\nimport java.util.Scanner;\npublic class ScannerDemo {\n\tpublic static void main(String[] args) {\n\t\t//创建对象\n\t\tScanner sc = new Scanner(System.in);\n\t\t//接收数据\n\t\tint x = sc.nextInt();\n\t\t//输出数据\n\t\tSystem.out.println(\"x:\" + x);\n\t}\n}\n~~~\n\n改写三个和尚案例，数据使用键盘录入。\n\n~~~java\nimport java.util.Scanner;\npublic class ScannerTest {\n\tpublic static void main(String[] args) {\n\t\t//身高未知，采用键盘录入实现。首先导包，然后创建对象。\n\t\tScanner sc = new Scanner(System.in);\n\t\t//键盘录入三个身高分别赋值给三个变量。\n\t\tSystem.out.println(\"请输入第一个和尚的身高：\");\n\t\tint height1 = sc.nextInt();\n\t\tSystem.out.println(\"请输入第二个和尚的身高：\");\n\t\tint height2 = sc.nextInt();\n\t\tSystem.out.println(\"请输入第三个和尚的身高：\");\n\t\tint height3 = sc.nextInt();\n\t\t//用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。\n\t\tint tempHeight = height1 > height2 ? height1 : height2;\n\t\t//用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。\n\t\tint maxHeight = tempHeight > height3 ? tempHeight : height3;\n\t\t//输出结果。\n\t\tSystem.out.println(\"这三个和尚中身高最高的是：\" + maxHeight +\"cm\");\n\t}\n}\n~~~\n\n## 流程控制语句（应用）\n\n在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。\n\n### 流程控制语句分类\n\n​\t顺序结构\n\n​\t分支结构(if, switch)\n\n​\t循环结构(for, while, do…while)\n\n### 顺序结构\n\n顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。\n\n### 分支结构之if语句\n\n#### if语句格式1\n\n~~~java\n格式：\nif (关系表达式) {\n    语句体;\t\n}\n~~~\n\n执行流程：\n\n①首先计算关系表达式的值\n\n②如果关系表达式的值为true就执行语句体\n\n③如果关系表达式的值为false就不执行语句体\n\n④继续执行后面的语句内容\n\n示例：\n\n~~~java\npublic class IfDemo {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\t\n\t\t//定义两个变量\n\t\tint a = 10;\n\t\tint b = 20;\t\n\t\t//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b\n\t\tif(a == b) {\n\t\t\tSystem.out.println(\"a等于b\");\n\t\t}\t\t\n\t\t//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c\n\t\tint c = 10;\n\t\tif(a == c) {\n\t\t\tSystem.out.println(\"a等于c\");\n\t\t}\t\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n~~~\n\n#### if语句格式2\n\n~~~java\n格式：\nif (关系表达式) {\n    语句体1;\t\n} else {\n    语句体2;\t\n}\n~~~\n\n执行流程：\n\n①首先计算关系表达式的值\n\n②如果关系表达式的值为true就执行语句体1\n\n③如果关系表达式的值为false就执行语句体2\n\n④继续执行后面的语句内容\n\n\n\n示例：\n\n~~~java\npublic class IfDemo02 {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\t\t\n\t\t//定义两个变量\n\t\tint a = 10;\n\t\tint b = 20;\n\t\tb = 5;\t\n\t\t//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b\n\t\tif(a > b) {\n\t\t\tSystem.out.println(\"a的值大于b\");\n\t\t} else {\n\t\t\tSystem.out.println(\"a的值不大于b\");\n\t\t}\t\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n~~~\n\nif语句案例：奇偶数\n\n需求：任意给出一个整数，请用程序实现判断该整数是奇数还是偶数，并在控制台输出该整数是奇数还是偶数。\n\n分析：\n\n​\t①为了体现任意给出一个整数，采用键盘录入一个数据\n\n​\t②判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构\n\n​\t③判断是否偶数需要使用取余运算符实现该功能 number % 2 == 0\n\n​\t④根据判定情况，在控制台输出对应的内容\n\n~~~java\nimport java.util.Scanner;\npublic class IfTest01 {\n\tpublic static void main(String[] args) {\n\t\t//为了体现任意给出一个整数，采用键盘录入一个数据。(导包，创建对象，接收数据)\n\t\tScanner sc = new Scanner(System.in);\t\t\n\t\tSystem.out.println(\"请输入一个整数：\");\n\t\tint number = sc.nextInt();\t\n\t\t//判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构\t\t\n\t\t//判断是否偶数需要使用取余运算符实现该功能 number % 2 == 0\n\t\t//根据判定情况，在控制台输出对应的内容\n\t\tif(number%2 == 0) {\n\t\t\tSystem.out.println(number + \"是偶数\");\n\t\t} else {\n\t\t\tSystem.out.println(number + \"是奇数\");\n\t\t}\t\n\t}\n}\n~~~\n\n#### if语句格式3\n\n~~~java\n格式：\nif (关系表达式1) {\n    语句体1;\t\n} else if (关系表达式2) {\n    语句体2;\t\n} \n…\nelse {\n    语句体n+1;\n}\n~~~\n\n执行流程：\n\n①首先计算关系表达式1的值\n\n②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值\n\n③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值\n\n④…\n\n⑤如果没有任何关系表达式为true，就执行语句体n+1。\n\n![1545616667104](D:\\Desktop\\img\\1545616667104.png)\n\n示例：键盘录入一个星期数(1,2,...7)，输出对应的星期一，星期二，...星期日\n\n~~~java\nimport java.util.Scanner;\npublic class IfDemo03 {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"开始\");\n\t\t// 需求：键盘录入一个星期数(1,2,...7)，输出对应的星期一，星期二，...星期日\n\t\tScanner sc = new Scanner(System.in);\n\t\tSystem.out.println(\"请输入一个星期数(1-7)：\");\n\t\tint week = sc.nextInt();\n\t\tif(week == 1) {\n\t\t\tSystem.out.println(\"星期一\");\n\t\t} else if(week == 2) {\n\t\t\tSystem.out.println(\"星期二\");\n\t\t} else if(week == 3) {\n\t\t\tSystem.out.println(\"星期三\");\n\t\t} else if(week == 4) {\n\t\t\tSystem.out.println(\"星期四\");\n\t\t} else if(week == 5) {\n\t\t\tSystem.out.println(\"星期五\");\n\t\t} else if(week == 6) {\n\t\t\tSystem.out.println(\"星期六\");\n\t\t} else {\n\t\t\tSystem.out.println(\"星期日\");\n\t\t}\t\n\t\tSystem.out.println(\"结束\");\n\t}\n}\n~~~\n\nif语句格式3案例：\n\n需求：小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。\n\n分析：\n\n​\t①小明的考试成绩未知，可以使用键盘录入的方式获取值\n\n​\t②由于奖励种类较多，属于多种判断，采用if...else...if格式实现\n\n​\t③为每种判断设置对应的条件\n\n​\t④为每种判断设置对应的奖励\n\n~~~java\nimport java.util.Scanner;\npublic class IfTest02 {\n\tpublic static void main(String[] args) {\n\t\t//小明的考试成绩未知，可以使用键盘录入的方式获取值\n\t\tScanner sc = new Scanner(System.in);\t\n\t\tSystem.out.println(\"请输入一个分数：\");\n\t\tint score = sc.nextInt();\n\t\t//由于奖励种类较多，属于多种判断，采用if...else...if格式实现\n\t\t//为每种判断设置对应的条件\n\t\t//为每种判断设置对应的奖励\t\n\t\t//数据测试：正确数据，边界数据，错误数据\n\t\tif(score>100 || score<0) {\n\t\t\tSystem.out.println(\"你输入的分数有误\");\n\t\t} else if(score>=95 && score<=100) {\n\t\t\tSystem.out.println(\"山地自行车一辆\");\n\t\t} else if(score>=90 && score<=94) {\n\t\t\tSystem.out.println(\"游乐场玩一次\");\n\t\t} else if(score>=80 && score<=89) {\n\t\t\tSystem.out.println(\"变形金刚玩具一个\");\n\t\t} else {\n\t\t\tSystem.out.println(\"胖揍一顿\");\n\t\t}\n\t}\n}\n~~~\n","slug":"JAVA学习1","published":1,"updated":"2022-08-16T14:34:58.776Z","_id":"cl6w8r6cd0005wodua7l1h7nz","layout":"post","photos":[],"link":"","content":"<h1 id=\"JAVA基础知识\"><a href=\"#JAVA基础知识\" class=\"headerlink\" title=\"JAVA基础知识\"></a>JAVA基础知识</h1><h2 id=\"JAVA基础语法\"><a href=\"#JAVA基础语法\" class=\"headerlink\" title=\"JAVA基础语法\"></a>JAVA基础语法</h2><h4 id=\"注释（理解）\"><a href=\"#注释（理解）\" class=\"headerlink\" title=\"注释（理解）\"></a>注释（理解）</h4><p>注释是对代码的解释和说明文字，可以提高程序的可读性，因此在程序中添加必要的注释文字十分重要。Java中的注释分为三种：</p>\n<p>单行注释。单行注释的格式是使用&#x2F;&#x2F;，从&#x2F;&#x2F;开始至本行结尾的文字将作为注释文字。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这是单行注释文字</span></span><br></pre></td></tr></table></figure>\n\n<p>多行注释。多行注释的格式是使用&#x2F;* 和 *&#x2F;将一段较长的注释括起来。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">注意：多行注释不能嵌套使用。</span><br></pre></td></tr></table></figure>\n\n<p>文档注释。文档注释以<code>/**</code>开始，以<code>*/</code>结束。（以后讲）</p>\n<h4 id=\"关键字（理解）\"><a href=\"#关键字（理解）\" class=\"headerlink\" title=\"关键字（理解）\"></a>关键字（理解）</h4><p>关键字是指被java语言赋予了特殊含义的单词。</p>\n<p>关键字的特点：</p>\n<p>​\t关键字的字母全部小写。</p>\n<p>​\t常用的代码编辑器对关键字都有高亮显示，比如现在我们能看到的public、class、static等。</p>\n<h4 id=\"常量（应用）\"><a href=\"#常量（应用）\" class=\"headerlink\" title=\"常量（应用）\"></a>常量（应用）</h4><p>常量：在程序运行过程中，其值不可以发生改变的量。</p>\n<p>Java中的常量分类：</p>\n<p>​\t字符串常量  用双引号括起来的多个字符（可以包含0个、一个或多个），例如”a”、”abc”、”中国”等</p>\n<p>​\t整数常量  整数，例如：-10、0、88等</p>\n<p>​\t小数常量  小数，例如：-5.5、1.0、88.88等</p>\n<p>​\t字符常量  用单引号括起来的一个字符，例如：’a’、’5’、’B’、’中’等</p>\n<p>​\t布尔常量  布尔值，表示真假，只有两个值true和false</p>\n<p>​\t空常量  一个特殊的值，空值，值为null</p>\n<p>除空常量外，其他常量均可使用输出语句直接输出。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"number\">10</span>); <span class=\"comment\">// 输出一个整数</span></span><br><span class=\"line\">        System.out.println(<span class=\"number\">5.5</span>); <span class=\"comment\">// 输出一个小数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&#x27;a&#x27;</span>); <span class=\"comment\">// 输出一个字符</span></span><br><span class=\"line\">        System.out.println(<span class=\"literal\">true</span>); <span class=\"comment\">// 输出boolean值true</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;欢迎来到黑马程序员&quot;</span>); <span class=\"comment\">// 输出字符串</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"数据类型（记忆、应用）\"><a href=\"#数据类型（记忆、应用）\" class=\"headerlink\" title=\"数据类型（记忆、应用）\"></a>数据类型（记忆、应用）</h4><h5 id=\"计算机存储单元\"><a href=\"#计算机存储单元\" class=\"headerlink\" title=\"计算机存储单元\"></a>计算机存储单元</h5><p>我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，</p>\n<p>通常用大写字母”B”表示，字节是由连续的8个位组成。</p>\n<p>除了字节外还有一些常用的存储单位，其换算单位如下：</p>\n<p>1B（字节） &#x3D; 8bit</p>\n<p>1KB &#x3D; 1024B</p>\n<p>1MB &#x3D; 1024KB</p>\n<p>1GB &#x3D; 1024MB</p>\n<p>1TB &#x3D; 1024GB</p>\n<h5 id=\"Java中的数据类型\"><a href=\"#Java中的数据类型\" class=\"headerlink\" title=\"Java中的数据类型\"></a>Java中的数据类型</h5><p>Java是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。</p>\n<p>Java中的基本数据类型：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th>关键字</th>\n<th>内存占用</th>\n<th align=\"left\">取值范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">整数类型</td>\n<td>byte</td>\n<td>1</td>\n<td align=\"left\">-128~127</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td>short</td>\n<td>2</td>\n<td align=\"left\">-32768~32767</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td>int(默认)</td>\n<td>4</td>\n<td align=\"left\">-2的31次方到2的31次方-1</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td>long</td>\n<td>8</td>\n<td align=\"left\">-2的63次方到2的63次方-1</td>\n</tr>\n<tr>\n<td align=\"left\">浮点类型</td>\n<td>float</td>\n<td>4</td>\n<td align=\"left\">负数：-3.402823E+38到-1.401298E-45                                                             正数：   1.401298E-45到3.402823E+38</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td>double(默认)</td>\n<td>8</td>\n<td align=\"left\">负数：-1.797693E+308到-4.9000000E-324                                              正数：4.9000000E-324   到1.797693E+308</td>\n</tr>\n<tr>\n<td align=\"left\">字符类型</td>\n<td>char</td>\n<td>2</td>\n<td align=\"left\">0-65535</td>\n</tr>\n<tr>\n<td align=\"left\">布尔类型</td>\n<td>boolean</td>\n<td>1</td>\n<td align=\"left\">true，false</td>\n</tr>\n</tbody></table>\n<p>说明：</p>\n<p>​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p>\n<p>​\t在java中整数默认是int类型，浮点数默认是double类型。</p>\n<h4 id=\"变量（应用）\"><a href=\"#变量（应用）\" class=\"headerlink\" title=\"变量（应用）\"></a>变量（应用）</h4><h5 id=\"变量的定义\"><a href=\"#变量的定义\" class=\"headerlink\" title=\"变量的定义\"></a>变量的定义</h5><p>变量：在程序运行过程中，其值可以发生改变的量。</p>\n<p>从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。</p>\n<p>变量的定义格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型 变量名 = 初始化值; <span class=\"comment\">// 声明变量并赋值</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> <span class=\"number\">18</span>;</span><br><span class=\"line\">System.out.println(age);</span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 先声明，后赋值（使用前赋值即可）</span></span><br><span class=\"line\">数据类型 变量名;</span><br><span class=\"line\">变量名 = 初始化值;</span><br><span class=\"line\"><span class=\"type\">double</span> money;</span><br><span class=\"line\">money = <span class=\"number\">55.5</span>;</span><br><span class=\"line\">System.out.println(money);</span><br></pre></td></tr></table></figure>\n\n<p>还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>, b = <span class=\"number\">20</span>; <span class=\"comment\">// 定义int类型的变量a和b，中间使用逗号隔开</span></span><br><span class=\"line\">System.out.println(a);</span><br><span class=\"line\">System.out.println(b);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> c,d; <span class=\"comment\">// 声明int类型的变量c和d，中间使用逗号隔开</span></span><br><span class=\"line\">c = <span class=\"number\">30</span>;</span><br><span class=\"line\">d = <span class=\"number\">40</span>;</span><br><span class=\"line\">System.out.println(c);</span><br><span class=\"line\">System.out.println(d);</span><br></pre></td></tr></table></figure>\n\n<p>变量的使用：通过变量名访问即可。</p>\n<h5 id=\"使用变量时的注意事项\"><a href=\"#使用变量时的注意事项\" class=\"headerlink\" title=\"使用变量时的注意事项\"></a>使用变量时的注意事项</h5><ol>\n<li>在同一对花括号中，变量名不能重复。</li>\n<li>变量在使用之前，必须初始化（赋值）。</li>\n<li>定义long类型的变量时，需要在整数的后面加L（大小写均可，建议大写）。因为整数默认是int类型，整数太大可能超出int范围。</li>\n<li>定义float类型的变量时，需要在小数的后面加F（大小写均可，建议大写）。因为浮点数的默认类型是double， double的取值范围是大于float的，类型不兼容。</li>\n</ol>\n<h4 id=\"标识符（记忆、理解）\"><a href=\"#标识符（记忆、理解）\" class=\"headerlink\" title=\"标识符（记忆、理解）\"></a>标识符（记忆、理解）</h4><p>标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。</p>\n<p>Java中标识符的组成规则：</p>\n<p>​\t由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。</p>\n<p>​\t不能使用java中的关键字作为标识符。\t</p>\n<p>​\t标识符对大小写敏感（区分大小写）。</p>\n<p>Java中标识符的命名约定：</p>\n<p>​\t小驼峰式命名：变量名、方法名</p>\n<p>​\t\t首字母小写，从第二个单词开始每个单词的首字母大写。</p>\n<p>​\t大驼峰式命名：类名</p>\n<p>​\t\t每个单词的首字母都大写。</p>\n<p>​\t另外，标识符的命名最好可以做到见名知意</p>\n<p>​\t\t例如：username、studentNumber等。</p>\n<h4 id=\"类型转换（理解）\"><a href=\"#类型转换（理解）\" class=\"headerlink\" title=\"类型转换（理解）\"></a>类型转换（理解）</h4><p>在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。</p>\n<p>自动类型转换：</p>\n<p>​\t把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>; <span class=\"comment\">// 将int类型的10直接赋值给double类型</span></span><br><span class=\"line\">System.out.println(num); <span class=\"comment\">// 输出10.0</span></span><br></pre></td></tr></table></figure>\n\n<p>强制类型转换：</p>\n<p>​\t把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。</p>\n<p>​\t强制类型转换格式：目标数据类型 变量名 &#x3D; (目标数据类型)值或者变量;</p>\n<p>​\t例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">num1</span> <span class=\"operator\">=</span> <span class=\"number\">5.5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">num2</span> <span class=\"operator\">=</span> (<span class=\"type\">int</span>) num1; <span class=\"comment\">// 将double类型的num1强制转换为int类型</span></span><br><span class=\"line\">System.out.println(num2); <span class=\"comment\">// 输出5（小数位直接舍弃）</span></span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ol>\n<li>char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，’a’对应97。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">System.out.println(a); <span class=\"comment\">// 将输出97</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b3</span> <span class=\"operator\">=</span> b1 + b2; </span><br><span class=\"line\"><span class=\"comment\">// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。</span></span><br><span class=\"line\"><span class=\"comment\">// 修改为:</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> b1 + b2;</span><br><span class=\"line\"><span class=\"comment\">// 或者：</span></span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b3</span> <span class=\"operator\">=</span> (<span class=\"type\">byte</span>) (b1 + b2);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>boolean类型不能与其他基本数据类型相互转换。</li>\n</ol>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><h3 id=\"算术运算符（理解）\"><a href=\"#算术运算符（理解）\" class=\"headerlink\" title=\"算术运算符（理解）\"></a>算术运算符（理解）</h3><h4 id=\"运算符和表达式\"><a href=\"#运算符和表达式\" class=\"headerlink\" title=\"运算符和表达式\"></a>运算符和表达式</h4><p>运算符：对常量或者变量进行操作的符号</p>\n<p>表达式：用运算符把常量或者变量连接起来符合java语法的式子就可以称为表达式。</p>\n<p>​                    不同运算符连接的表达式体现的是不同类型的表达式。</p>\n<p>举例说明：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> a + b;</span><br></pre></td></tr></table></figure>\n\n<p>  +：是运算符，并且是算术运算符。</p>\n<p>  a + b：是表达式，由于+是算术运算符，所以这个表达式叫算术表达式。</p>\n<h4 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h4><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>+</td>\n<td>加</td>\n<td>参看小学一年级</td>\n</tr>\n<tr>\n<td>-</td>\n<td>减</td>\n<td>参看小学一年级</td>\n</tr>\n<tr>\n<td>*</td>\n<td>乘</td>\n<td>参看小学二年级，与“×”相同</td>\n</tr>\n<tr>\n<td>&#x2F;</td>\n<td>除</td>\n<td>参看小学二年级，与“÷”相同</td>\n</tr>\n<tr>\n<td>%</td>\n<td>取余</td>\n<td>获取的是两个数据做除法的余数</td>\n</tr>\n</tbody></table>\n<p>注意：</p>\n<p>&#x2F;和%的区别：两个数据做除法，&#x2F;取结果的商，%取结果的余数。</p>\n<p>整数操作只能得到整数，要想得到小数，必须有浮点数参与运算。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">System.out.println(a / b); <span class=\"comment\">// 输出结果3</span></span><br><span class=\"line\">System.out.println(a % b); <span class=\"comment\">// 输出结果1</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"字符的“-”操作\"><a href=\"#字符的“-”操作\" class=\"headerlink\" title=\"字符的“+”操作\"></a>字符的“+”操作</h4><p>char类型参与算术运算，使用的是计算机底层对应的十进制数值。需要我们记住三个字符对应的数值：</p>\n<p>‘a’  –  97\t\ta-z是连续的，所以’b’对应的数值是98，’c’是99，依次递加</p>\n<p>‘A’  –  65\t\tA-Z是连续的，所以’B’对应的数值是66，’C’是67，依次递加</p>\n<p>‘0’  –  48\t\t0-9是连续的，所以’1’对应的数值是49，’2’是50，依次递加</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 可以通过使用字符与整数做算术运算，得出字符对应的数值是多少</span></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">ch1</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">System.out.println(ch1 + <span class=\"number\">1</span>); <span class=\"comment\">// 输出98，97 + 1 = 98</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">ch2</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">System.out.println(ch2 + <span class=\"number\">1</span>); <span class=\"comment\">// 输出66，65 + 1 = 66</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">ch3</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">System.out.println(ch3 + <span class=\"number\">1</span>); <span class=\"comment\">// 输出49，48 + 1 = 49</span></span><br></pre></td></tr></table></figure>\n\n<p>算术表达式中包含不同的基本数据类型的值的时候，整个算术表达式的类型会自动进行提升。</p>\n<p>提升规则：</p>\n<p>byte类型，short类型和char类型将被提升到int类型，不管是否有其他类型参与运算。</p>\n<p>整个表达式的类型自动提升到与表达式中最高等级的操作数相同的类型</p>\n<p>​       等级顺序：byte,short,char –&gt; int –&gt; long –&gt; float –&gt; double</p>\n<p>例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"comment\">// byte b3 = b1 + b2; // 该行报错，因为byte类型参与算术运算会自动提示为int，int赋值给byte可能损失精度</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i3</span> <span class=\"operator\">=</span> b1 + b2; <span class=\"comment\">// 应该使用int接收</span></span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b3</span> <span class=\"operator\">=</span> (<span class=\"type\">byte</span>) (b1 + b2); <span class=\"comment\">// 或者将结果强制转换为byte类型</span></span><br><span class=\"line\">-------------------------------</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">num1</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">num2</span> <span class=\"operator\">=</span> <span class=\"number\">20.0</span>;</span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">num3</span> <span class=\"operator\">=</span> num1 + num2; <span class=\"comment\">// 使用double接收，因为num1会自动提升为double类型</span></span><br></pre></td></tr></table></figure>\n\n<p>tips：正是由于上述原因，所以在程序开发中我们很少使用byte或者short类型定义整数。也很少会使用char类型定义字符，而使用字符串类型，更不会使用char类型做算术运算。</p>\n<h4 id=\"字符串的“-”操作\"><a href=\"#字符串的“-”操作\" class=\"headerlink\" title=\"字符串的“+”操作\"></a>字符串的“+”操作</h4><p>当“+”操作中出现字符串时，这个”+”是字符串连接符，而不是算术运算。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"string\">&quot;itheima&quot;</span>+ <span class=\"number\">666</span>); <span class=\"comment\">// 输出：itheima666</span></span><br></pre></td></tr></table></figure>\n\n<p>在”+”操作中，如果出现了字符串，就是连接运算符，否则就是算术运算。当连续进行“+”操作时，从左到右逐个执行。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"number\">1</span> + <span class=\"number\">99</span> + <span class=\"string\">&quot;年黑马&quot;</span>); <span class=\"comment\">// 输出：100年黑马</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">1</span> + <span class=\"number\">2</span> + <span class=\"string\">&quot;itheima&quot;</span> + <span class=\"number\">3</span> + <span class=\"number\">4</span>); <span class=\"comment\">// 输出：3itheima34</span></span><br><span class=\"line\"><span class=\"comment\">// 可以使用小括号改变运算的优先级 </span></span><br><span class=\"line\">System.out.println(<span class=\"number\">1</span> + <span class=\"number\">2</span> + <span class=\"string\">&quot;itheima&quot;</span> + (<span class=\"number\">3</span> + <span class=\"number\">4</span>)); <span class=\"comment\">// 输出：3itheima7</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"赋值运算符（应用）\"><a href=\"#赋值运算符（应用）\" class=\"headerlink\" title=\"赋值运算符（应用）\"></a>赋值运算符（应用）</h3><p>赋值运算符的作用是将一个表达式的值赋给左边，左边必须是可修改的，不能是常量。</p>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;</td>\n<td>赋值</td>\n<td>a&#x3D;10，将10赋值给变量a</td>\n</tr>\n<tr>\n<td>+&#x3D;</td>\n<td>加后赋值</td>\n<td>a+&#x3D;b，将a+b的值给a</td>\n</tr>\n<tr>\n<td>-&#x3D;</td>\n<td>减后赋值</td>\n<td>a-&#x3D;b，将a-b的值给a</td>\n</tr>\n<tr>\n<td>*&#x3D;</td>\n<td>乘后赋值</td>\n<td>a*&#x3D;b，将a×b的值给a</td>\n</tr>\n<tr>\n<td>&#x2F;&#x3D;</td>\n<td>除后赋值</td>\n<td>a&#x2F;&#x3D;b，将a÷b的商给a</td>\n</tr>\n<tr>\n<td>%&#x3D;</td>\n<td>取余后赋值</td>\n<td>a%&#x3D;b，将a÷b的余数给a</td>\n</tr>\n</tbody></table>\n<p>注意：</p>\n<p>扩展的赋值运算符隐含了强制类型转换。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">short</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">s = s + <span class=\"number\">10</span>; <span class=\"comment\">// 此行代码报出，因为运算中s提升为int类型，运算结果int赋值给short可能损失精度</span></span><br><span class=\"line\"></span><br><span class=\"line\">s += <span class=\"number\">10</span>; <span class=\"comment\">// 此行代码没有问题，隐含了强制类型转换，相当于 s = (short) (s + 10);</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自增自减运算符（理解）\"><a href=\"#自增自减运算符（理解）\" class=\"headerlink\" title=\"自增自减运算符（理解）\"></a>自增自减运算符（理解）</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>++</td>\n<td>自增</td>\n<td>变量的值加1</td>\n</tr>\n<tr>\n<td>–</td>\n<td>自减</td>\n<td>变量的值减1</td>\n</tr>\n</tbody></table>\n<p>注意事项：</p>\n<p>​\t++和– 既可以放在变量的后边，也可以放在变量的前边。</p>\n<p>​\t单独使用的时候， ++和– 无论是放在变量的前边还是后边，结果是一样的。</p>\n<p>​\t参与操作的时候，如果放在变量的后边，先拿变量参与操作，后拿变量做++或者–。</p>\n<p>​\t参与操作的时候，如果放在变量的前边，先拿变量做++或者–，后拿变量参与操作。</p>\n<p>​\t最常见的用法：单独使用。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">i++; <span class=\"comment\">// 单独使用</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;i:&quot;</span> + i); <span class=\"comment\">// i:11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">++j; <span class=\"comment\">// 单独使用</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;j:&quot;</span> + j); <span class=\"comment\">// j:11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> x++; <span class=\"comment\">// 赋值运算，++在后边，所以是使用x原来的值赋值给y，x本身自增1</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;x:&quot;</span> + x + <span class=\"string\">&quot;, y:&quot;</span> + y); <span class=\"comment\">// x:11，y:10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> ++m; <span class=\"comment\">// 赋值运算，++在前边，所以是使用m自增后的值赋值给n，m本身自增1</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;m:&quot;</span> + m + <span class=\"string\">&quot;, m:&quot;</span> + m); <span class=\"comment\">// m:11，m:11</span></span><br></pre></td></tr></table></figure>\n\n<p>练习：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> x++ + x++ + x++;</span><br><span class=\"line\">System.out.println(y); <span class=\"comment\">// y的值是多少？</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">解析，三个表达式都是++在后，所以每次使用的都是自增前的值，但程序自左至右执行，所以第一次自增时，使用的是10进行计算，但第二次自增时，x的值已经自增到11了，所以第二次使用的是11，然后再次自增。。。</span></span><br><span class=\"line\"><span class=\"comment\">所以整个式子应该是：int y = 10 + 11 + 12;</span></span><br><span class=\"line\"><span class=\"comment\">输出结果为33。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">注意：通过此练习深刻理解自增和自减的规律，但实际开发中强烈建议不要写这样的代码！小心挨打！</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关系运算符（应用）\"><a href=\"#关系运算符（应用）\" class=\"headerlink\" title=\"关系运算符（应用）\"></a>关系运算符（应用）</h3><p>关系运算符有6种关系，分别为小于、小于等于、大于、等于、大于等于、不等于。</p>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;&#x3D;</td>\n<td>a&#x3D;&#x3D;b，判断a和b的值是否相等，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>!&#x3D;</td>\n<td>a!&#x3D;b，判断a和b的值是否不相等，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>a&gt;b，判断a是否大于b，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>&gt;&#x3D;</td>\n<td>a&gt;&#x3D;b，判断a是否大于等于b，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>a&lt;b，判断a是否小于b，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>&lt;&#x3D;</td>\n<td>a&lt;&#x3D;b，判断a是否小于等于b，成立为true，不成立为false</td>\n</tr>\n</tbody></table>\n<p>注意事项：</p>\n<p>​\t关系运算符的结果都是boolean类型，要么是true，要么是false。</p>\n<p>​\t千万不要把“&#x3D;&#x3D;”误写成“&#x3D;”，”&#x3D;&#x3D;”是判断是否相等的关系，”&#x3D;”是赋值。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">System.out.println(a == b); <span class=\"comment\">// false</span></span><br><span class=\"line\">System.out.println(a != b); <span class=\"comment\">// true</span></span><br><span class=\"line\">System.out.println(a &gt; b); <span class=\"comment\">// false</span></span><br><span class=\"line\">System.out.println(a &gt;= b); <span class=\"comment\">// false</span></span><br><span class=\"line\">System.out.println(a &lt; b); <span class=\"comment\">// true</span></span><br><span class=\"line\">System.out.println(a &lt;= b); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关系运算的结果肯定是boolean类型，所以也可以将运算结果赋值给boolean类型的变量</span></span><br><span class=\"line\"><span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> a &gt; b;</span><br><span class=\"line\">System.out.println(flag); <span class=\"comment\">// 输出false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"逻辑运算符（应用）\"><a href=\"#逻辑运算符（应用）\" class=\"headerlink\" title=\"逻辑运算符（应用）\"></a>逻辑运算符（应用）</h3><p>逻辑运算符把各个运算的关系表达式连接起来组成一个复杂的逻辑表达式，以判断程序中的表达式是否成立，判断的结果是 true 或 false。</p>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;</td>\n<td>逻辑与</td>\n<td>a&amp;b，a和b都是true，结果为true，否则为false</td>\n</tr>\n<tr>\n<td>|</td>\n<td>逻辑或</td>\n<td>a|b，a和b都是false，结果为false，否则为true</td>\n</tr>\n<tr>\n<td>^</td>\n<td>逻辑异或</td>\n<td>a^b，a和b结果不同为true，相同为false</td>\n</tr>\n<tr>\n<td>!</td>\n<td>逻辑非</td>\n<td>!a，结果和a的结果正好相反</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义变量</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">30</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//&amp; “与”，并且的关系，只要表达式中有一个值为false，结果即为false</span></span><br><span class=\"line\">System.out.println((i &gt; j) &amp; (i &gt; k)); <span class=\"comment\">//false &amp; false,输出false</span></span><br><span class=\"line\">System.out.println((i &lt; j) &amp; (i &gt; k)); <span class=\"comment\">//true &amp; false,输出false</span></span><br><span class=\"line\">System.out.println((i &gt; j) &amp; (i &lt; k)); <span class=\"comment\">//false &amp; true,输出false</span></span><br><span class=\"line\">System.out.println((i &lt; j) &amp; (i &lt; k)); <span class=\"comment\">//true &amp; true,输出true</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;--------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//| “或”，或者的关系，只要表达式中有一个值为true，结果即为true</span></span><br><span class=\"line\">System.out.println((i &gt; j) | (i &gt; k)); <span class=\"comment\">//false | false,输出false</span></span><br><span class=\"line\">System.out.println((i &lt; j) | (i &gt; k)); <span class=\"comment\">//true | false,输出true</span></span><br><span class=\"line\">System.out.println((i &gt; j) | (i &lt; k)); <span class=\"comment\">//false | true,输出true</span></span><br><span class=\"line\">System.out.println((i &lt; j) | (i &lt; k)); <span class=\"comment\">//true | true,输出true</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;--------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//^ “异或”，相同为false，不同为true</span></span><br><span class=\"line\">System.out.println((i &gt; j) ^ (i &gt; k)); <span class=\"comment\">//false ^ false,输出false</span></span><br><span class=\"line\">System.out.println((i &lt; j) ^ (i &gt; k)); <span class=\"comment\">//true ^ false,输出true</span></span><br><span class=\"line\">System.out.println((i &gt; j) ^ (i &lt; k)); <span class=\"comment\">//false ^ true,输出true</span></span><br><span class=\"line\">System.out.println((i &lt; j) ^ (i &lt; k)); <span class=\"comment\">//true ^ true,输出false</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;--------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//! “非”，取反</span></span><br><span class=\"line\">System.out.println((i &gt; j)); <span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(!(i &gt; j)); <span class=\"comment\">//!false，,输出true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"短路逻辑运算符\"><a href=\"#短路逻辑运算符\" class=\"headerlink\" title=\"短路逻辑运算符\"></a>短路逻辑运算符</h4><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;&amp;</td>\n<td>短路与</td>\n<td>作用和&amp;相同，但是有短路效果</td>\n</tr>\n<tr>\n<td>||</td>\n<td>短路或</td>\n<td>作用和|相同，但是有短路效果</td>\n</tr>\n</tbody></table>\n<p>在逻辑与运算中，只要有一个表达式的值为false，那么结果就可以判定为false了，没有必要将所有表达式的值都计算出来，短路与操作就有这样的效果，可以提高效率。同理在逻辑或运算中，一旦发现值为true，右边的表达式将不再参与运算。</p>\n<ul>\n<li><p>逻辑与&amp;，无论左边真假，右边都要执行。</p>\n</li>\n<li><p>短路与&amp;&amp;，如果左边为真，右边执行；如果左边为假，右边不执行。</p>\n</li>\n<li><p>逻辑或|，无论左边真假，右边都要执行。</p>\n</li>\n<li><p>短路或||，如果左边为假，右边执行；如果左边为真，右边不执行。</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> <span class=\"number\">4</span>;</span><br><span class=\"line\">System.out.println((x++ &gt; <span class=\"number\">4</span>) &amp; (y++ &gt; <span class=\"number\">5</span>)); <span class=\"comment\">// 两个表达都会运算</span></span><br><span class=\"line\">System.out.println(x); <span class=\"comment\">// 4</span></span><br><span class=\"line\">System.out.println(y); <span class=\"comment\">// 5</span></span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println((x++ &gt; <span class=\"number\">4</span>) &amp;&amp; (y++ &gt; <span class=\"number\">5</span>)); <span class=\"comment\">// 左边已经可以确定结果为false，右边不参与运算</span></span><br><span class=\"line\">System.out.println(x); <span class=\"comment\">// 4</span></span><br><span class=\"line\">System.out.println(y); <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三元运算符（理解）\"><a href=\"#三元运算符（理解）\" class=\"headerlink\" title=\"三元运算符（理解）\"></a>三元运算符（理解）</h3><p>三元运算符语法格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">关系表达式 ? 表达式<span class=\"number\">1</span> : 表达式<span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<p>解释：问号前面的位置是判断的条件，判断结果为boolean型，为true时调用表达式1，为false时调用表达式2。其逻辑为：如果条件表达式成立或者满足则执行表达式1，否则执行第二个。</p>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> a &gt; b ? a : b; <span class=\"comment\">// 判断 a&gt;b 是否为真，如果为真取a的值，如果为假，取b的值</span></span><br></pre></td></tr></table></figure>\n\n<p>三元运算符案例：</p>\n<p>1、需求：动物园里有两只老虎，已知两只老虎的体重分别为180kg、200kg，请用程序实现判断两只老虎的体重是否相同。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorTest01</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1：定义两个变量用于保存老虎的体重，单位为kg，这里仅仅体现数值即可。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">weight1</span> <span class=\"operator\">=</span> <span class=\"number\">180</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">weight2</span> <span class=\"operator\">=</span> <span class=\"number\">200</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//2：用三元运算符实现老虎体重的判断，体重相同，返回true，否则，返回false。</span></span><br><span class=\"line\">\t\t<span class=\"type\">boolean</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> weight1 == weight2 ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//3：输出结果</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;b:&quot;</span> + b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2、需求：一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm，请用程序实现获取这三个和尚的最高身高。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorTest02</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1：定义三个变量用于保存和尚的身高，单位为cm，这里仅仅体现数值即可。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height1</span> <span class=\"operator\">=</span> <span class=\"number\">150</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height2</span> <span class=\"operator\">=</span> <span class=\"number\">210</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height3</span> <span class=\"operator\">=</span> <span class=\"number\">165</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//2：用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">tempHeight</span> <span class=\"operator\">=</span> height1 &gt; height2 ? height1 : height2;\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//3：用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">maxHeight</span> <span class=\"operator\">=</span> tempHeight &gt; height3 ? tempHeight : height3;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//4：输出结果</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;maxHeight:&quot;</span> + maxHeight);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据输入（应用）\"><a href=\"#数据输入（应用）\" class=\"headerlink\" title=\"数据输入（应用）\"></a>数据输入（应用）</h2><p>我们可以通过 Scanner 类来获取用户的输入。使用步骤如下：</p>\n<p>1、导包。Scanner 类在java.util包下，所以需要将该类导入。导包的语句需要定义在类的上面。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner; </span><br></pre></td></tr></table></figure>\n\n<p>2、创建Scanner对象。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);<span class=\"comment\">// 创建Scanner对象，sc表示变量名，其他均不可变</span></span><br></pre></td></tr></table></figure>\n\n<p>3、接收数据</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> sc.nextInt(); <span class=\"comment\">// 表示将键盘录入的值作为int数返回。</span></span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ScannerDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//创建对象</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">\t\t<span class=\"comment\">//接收数据</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出数据</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;x:&quot;</span> + x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>改写三个和尚案例，数据使用键盘录入。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ScannerTest</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//身高未知，采用键盘录入实现。首先导包，然后创建对象。</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">\t\t<span class=\"comment\">//键盘录入三个身高分别赋值给三个变量。</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入第一个和尚的身高：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height1</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入第二个和尚的身高：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height2</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入第三个和尚的身高：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height3</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"comment\">//用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">tempHeight</span> <span class=\"operator\">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class=\"line\">\t\t<span class=\"comment\">//用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">maxHeight</span> <span class=\"operator\">=</span> tempHeight &gt; height3 ? tempHeight : height3;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出结果。</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;这三个和尚中身高最高的是：&quot;</span> + maxHeight +<span class=\"string\">&quot;cm&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"流程控制语句（应用）\"><a href=\"#流程控制语句（应用）\" class=\"headerlink\" title=\"流程控制语句（应用）\"></a>流程控制语句（应用）</h2><p>在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。</p>\n<h3 id=\"流程控制语句分类\"><a href=\"#流程控制语句分类\" class=\"headerlink\" title=\"流程控制语句分类\"></a>流程控制语句分类</h3><p>​\t顺序结构</p>\n<p>​\t分支结构(if, switch)</p>\n<p>​\t循环结构(for, while, do…while)</p>\n<h3 id=\"顺序结构\"><a href=\"#顺序结构\" class=\"headerlink\" title=\"顺序结构\"></a>顺序结构</h3><p>顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p>\n<h3 id=\"分支结构之if语句\"><a href=\"#分支结构之if语句\" class=\"headerlink\" title=\"分支结构之if语句\"></a>分支结构之if语句</h3><h4 id=\"if语句格式1\"><a href=\"#if语句格式1\" class=\"headerlink\" title=\"if语句格式1\"></a>if语句格式1</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式) &#123;</span><br><span class=\"line\">    语句体;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式的值</p>\n<p>②如果关系表达式的值为true就执行语句体</p>\n<p>③如果关系表达式的值为false就不执行语句体</p>\n<p>④继续执行后面的语句内容</p>\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义两个变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a == b) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a等于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a == c) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a等于c&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"if语句格式2\"><a href=\"#if语句格式2\" class=\"headerlink\" title=\"if语句格式2\"></a>if语句格式2</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式的值</p>\n<p>②如果关系表达式的值为true就执行语句体1</p>\n<p>③如果关系表达式的值为false就执行语句体2</p>\n<p>④继续执行后面的语句内容</p>\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo02</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义两个变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">\t\tb = <span class=\"number\">5</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a的值大于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a的值不大于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>if语句案例：奇偶数</p>\n<p>需求：任意给出一个整数，请用程序实现判断该整数是奇数还是偶数，并在控制台输出该整数是奇数还是偶数。</p>\n<p>分析：</p>\n<p>​\t①为了体现任意给出一个整数，采用键盘录入一个数据</p>\n<p>​\t②判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构</p>\n<p>​\t③判断是否偶数需要使用取余运算符实现该功能 number % 2 &#x3D;&#x3D; 0</p>\n<p>​\t④根据判定情况，在控制台输出对应的内容</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfTest01</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//为了体现任意给出一个整数，采用键盘录入一个数据。(导包，创建对象，接收数据)</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一个整数：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> sc.nextInt();\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构\t\t</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//判断是否偶数需要使用取余运算符实现该功能 number % 2 == 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//根据判定情况，在控制台输出对应的内容</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(number%<span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(number + <span class=\"string\">&quot;是偶数&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(number + <span class=\"string\">&quot;是奇数&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"if语句格式3\"><a href=\"#if语句格式3\" class=\"headerlink\" title=\"if语句格式3\"></a>if语句格式3</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (关系表达式<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    语句体n+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式1的值</p>\n<p>②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值</p>\n<p>③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值</p>\n<p>④…</p>\n<p>⑤如果没有任何关系表达式为true，就执行语句体n+1。</p>\n<p><img src=\"D:\\Desktop\\img\\1545616667104.png\" alt=\"1545616667104\"></p>\n<p>示例：键盘录入一个星期数(1,2,…7)，输出对应的星期一，星期二，…星期日</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo03</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 需求：键盘录入一个星期数(1,2,...7)，输出对应的星期一，星期二，...星期日</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一个星期数(1-7)：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">week</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(week == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期一&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期二&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期三&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期四&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期五&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">6</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期六&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期日&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>if语句格式3案例：</p>\n<p>需求：小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。</p>\n<p>分析：</p>\n<p>​\t①小明的考试成绩未知，可以使用键盘录入的方式获取值</p>\n<p>​\t②由于奖励种类较多，属于多种判断，采用if…else…if格式实现</p>\n<p>​\t③为每种判断设置对应的条件</p>\n<p>​\t④为每种判断设置对应的奖励</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfTest02</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//小明的考试成绩未知，可以使用键盘录入的方式获取值</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一个分数：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">score</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"comment\">//由于奖励种类较多，属于多种判断，采用if...else...if格式实现</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//为每种判断设置对应的条件</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//为每种判断设置对应的奖励\t</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//数据测试：正确数据，边界数据，错误数据</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(score&gt;<span class=\"number\">100</span> || score&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;你输入的分数有误&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score&gt;=<span class=\"number\">95</span> &amp;&amp; score&lt;=<span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;山地自行车一辆&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score&gt;=<span class=\"number\">90</span> &amp;&amp; score&lt;=<span class=\"number\">94</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;游乐场玩一次&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score&gt;=<span class=\"number\">80</span> &amp;&amp; score&lt;=<span class=\"number\">89</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;变形金刚玩具一个&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;胖揍一顿&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"valine":{"tv_doge":"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png","tv_�H�H":"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png","tv_͵Ц":"bb690d4107620f1c15cff29509db529a73aee261.png","tv_��Ҋ":"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png","tv_��Į":"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png","tv_�lŭ":"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png","tv_�lؔ":"34db290afd2963723c6eb3c4560667db7253a21a.png","tv_�ɐ�":"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png","tv_��Ѫ":"09dd16a7aa59b77baa1155d47484409624470c77.png","tv_��":"241ee304e44c0af029adceb294399391e4737ef2.png","tv_�I��":"9f996894a39e282ccf5e66856af49483f81870f3.png","tv_��Ц":"1f0b87f731a671079842116e0991c91c2c88645a.png","tv_����":"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png","tv_���":"23269aeb35f99daee28dda129676f6e9ea87934f.png","tv_ί��":"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png","tv_΢Ц":"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png","tv_˼��":"90cf159733e558137ed20aa04d09964436f618a1.png","tv_�@��":"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"},"link":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网誌框架"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中国最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"excerpt":"","more":"<h1 id=\"JAVA基础知识\"><a href=\"#JAVA基础知识\" class=\"headerlink\" title=\"JAVA基础知识\"></a>JAVA基础知识</h1><h2 id=\"JAVA基础语法\"><a href=\"#JAVA基础语法\" class=\"headerlink\" title=\"JAVA基础语法\"></a>JAVA基础语法</h2><h4 id=\"注释（理解）\"><a href=\"#注释（理解）\" class=\"headerlink\" title=\"注释（理解）\"></a>注释（理解）</h4><p>注释是对代码的解释和说明文字，可以提高程序的可读性，因此在程序中添加必要的注释文字十分重要。Java中的注释分为三种：</p>\n<p>单行注释。单行注释的格式是使用&#x2F;&#x2F;，从&#x2F;&#x2F;开始至本行结尾的文字将作为注释文字。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这是单行注释文字</span></span><br></pre></td></tr></table></figure>\n\n<p>多行注释。多行注释的格式是使用&#x2F;* 和 *&#x2F;将一段较长的注释括起来。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">这是多行注释文字</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">注意：多行注释不能嵌套使用。</span><br></pre></td></tr></table></figure>\n\n<p>文档注释。文档注释以<code>/**</code>开始，以<code>*/</code>结束。（以后讲）</p>\n<h4 id=\"关键字（理解）\"><a href=\"#关键字（理解）\" class=\"headerlink\" title=\"关键字（理解）\"></a>关键字（理解）</h4><p>关键字是指被java语言赋予了特殊含义的单词。</p>\n<p>关键字的特点：</p>\n<p>​\t关键字的字母全部小写。</p>\n<p>​\t常用的代码编辑器对关键字都有高亮显示，比如现在我们能看到的public、class、static等。</p>\n<h4 id=\"常量（应用）\"><a href=\"#常量（应用）\" class=\"headerlink\" title=\"常量（应用）\"></a>常量（应用）</h4><p>常量：在程序运行过程中，其值不可以发生改变的量。</p>\n<p>Java中的常量分类：</p>\n<p>​\t字符串常量  用双引号括起来的多个字符（可以包含0个、一个或多个），例如”a”、”abc”、”中国”等</p>\n<p>​\t整数常量  整数，例如：-10、0、88等</p>\n<p>​\t小数常量  小数，例如：-5.5、1.0、88.88等</p>\n<p>​\t字符常量  用单引号括起来的一个字符，例如：’a’、’5’、’B’、’中’等</p>\n<p>​\t布尔常量  布尔值，表示真假，只有两个值true和false</p>\n<p>​\t空常量  一个特殊的值，空值，值为null</p>\n<p>除空常量外，其他常量均可使用输出语句直接输出。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"number\">10</span>); <span class=\"comment\">// 输出一个整数</span></span><br><span class=\"line\">        System.out.println(<span class=\"number\">5.5</span>); <span class=\"comment\">// 输出一个小数</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&#x27;a&#x27;</span>); <span class=\"comment\">// 输出一个字符</span></span><br><span class=\"line\">        System.out.println(<span class=\"literal\">true</span>); <span class=\"comment\">// 输出boolean值true</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;欢迎来到黑马程序员&quot;</span>); <span class=\"comment\">// 输出字符串</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"数据类型（记忆、应用）\"><a href=\"#数据类型（记忆、应用）\" class=\"headerlink\" title=\"数据类型（记忆、应用）\"></a>数据类型（记忆、应用）</h4><h5 id=\"计算机存储单元\"><a href=\"#计算机存储单元\" class=\"headerlink\" title=\"计算机存储单元\"></a>计算机存储单元</h5><p>我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，</p>\n<p>通常用大写字母”B”表示，字节是由连续的8个位组成。</p>\n<p>除了字节外还有一些常用的存储单位，其换算单位如下：</p>\n<p>1B（字节） &#x3D; 8bit</p>\n<p>1KB &#x3D; 1024B</p>\n<p>1MB &#x3D; 1024KB</p>\n<p>1GB &#x3D; 1024MB</p>\n<p>1TB &#x3D; 1024GB</p>\n<h5 id=\"Java中的数据类型\"><a href=\"#Java中的数据类型\" class=\"headerlink\" title=\"Java中的数据类型\"></a>Java中的数据类型</h5><p>Java是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。</p>\n<p>Java中的基本数据类型：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">数据类型</th>\n<th>关键字</th>\n<th>内存占用</th>\n<th align=\"left\">取值范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">整数类型</td>\n<td>byte</td>\n<td>1</td>\n<td align=\"left\">-128~127</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td>short</td>\n<td>2</td>\n<td align=\"left\">-32768~32767</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td>int(默认)</td>\n<td>4</td>\n<td align=\"left\">-2的31次方到2的31次方-1</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td>long</td>\n<td>8</td>\n<td align=\"left\">-2的63次方到2的63次方-1</td>\n</tr>\n<tr>\n<td align=\"left\">浮点类型</td>\n<td>float</td>\n<td>4</td>\n<td align=\"left\">负数：-3.402823E+38到-1.401298E-45                                                             正数：   1.401298E-45到3.402823E+38</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td>double(默认)</td>\n<td>8</td>\n<td align=\"left\">负数：-1.797693E+308到-4.9000000E-324                                              正数：4.9000000E-324   到1.797693E+308</td>\n</tr>\n<tr>\n<td align=\"left\">字符类型</td>\n<td>char</td>\n<td>2</td>\n<td align=\"left\">0-65535</td>\n</tr>\n<tr>\n<td align=\"left\">布尔类型</td>\n<td>boolean</td>\n<td>1</td>\n<td align=\"left\">true，false</td>\n</tr>\n</tbody></table>\n<p>说明：</p>\n<p>​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p>\n<p>​\t在java中整数默认是int类型，浮点数默认是double类型。</p>\n<h4 id=\"变量（应用）\"><a href=\"#变量（应用）\" class=\"headerlink\" title=\"变量（应用）\"></a>变量（应用）</h4><h5 id=\"变量的定义\"><a href=\"#变量的定义\" class=\"headerlink\" title=\"变量的定义\"></a>变量的定义</h5><p>变量：在程序运行过程中，其值可以发生改变的量。</p>\n<p>从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。</p>\n<p>变量的定义格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型 变量名 = 初始化值; <span class=\"comment\">// 声明变量并赋值</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> <span class=\"number\">18</span>;</span><br><span class=\"line\">System.out.println(age);</span><br></pre></td></tr></table></figure>\n\n<p>或者</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 先声明，后赋值（使用前赋值即可）</span></span><br><span class=\"line\">数据类型 变量名;</span><br><span class=\"line\">变量名 = 初始化值;</span><br><span class=\"line\"><span class=\"type\">double</span> money;</span><br><span class=\"line\">money = <span class=\"number\">55.5</span>;</span><br><span class=\"line\">System.out.println(money);</span><br></pre></td></tr></table></figure>\n\n<p>还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>, b = <span class=\"number\">20</span>; <span class=\"comment\">// 定义int类型的变量a和b，中间使用逗号隔开</span></span><br><span class=\"line\">System.out.println(a);</span><br><span class=\"line\">System.out.println(b);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> c,d; <span class=\"comment\">// 声明int类型的变量c和d，中间使用逗号隔开</span></span><br><span class=\"line\">c = <span class=\"number\">30</span>;</span><br><span class=\"line\">d = <span class=\"number\">40</span>;</span><br><span class=\"line\">System.out.println(c);</span><br><span class=\"line\">System.out.println(d);</span><br></pre></td></tr></table></figure>\n\n<p>变量的使用：通过变量名访问即可。</p>\n<h5 id=\"使用变量时的注意事项\"><a href=\"#使用变量时的注意事项\" class=\"headerlink\" title=\"使用变量时的注意事项\"></a>使用变量时的注意事项</h5><ol>\n<li>在同一对花括号中，变量名不能重复。</li>\n<li>变量在使用之前，必须初始化（赋值）。</li>\n<li>定义long类型的变量时，需要在整数的后面加L（大小写均可，建议大写）。因为整数默认是int类型，整数太大可能超出int范围。</li>\n<li>定义float类型的变量时，需要在小数的后面加F（大小写均可，建议大写）。因为浮点数的默认类型是double， double的取值范围是大于float的，类型不兼容。</li>\n</ol>\n<h4 id=\"标识符（记忆、理解）\"><a href=\"#标识符（记忆、理解）\" class=\"headerlink\" title=\"标识符（记忆、理解）\"></a>标识符（记忆、理解）</h4><p>标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。</p>\n<p>Java中标识符的组成规则：</p>\n<p>​\t由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。</p>\n<p>​\t不能使用java中的关键字作为标识符。\t</p>\n<p>​\t标识符对大小写敏感（区分大小写）。</p>\n<p>Java中标识符的命名约定：</p>\n<p>​\t小驼峰式命名：变量名、方法名</p>\n<p>​\t\t首字母小写，从第二个单词开始每个单词的首字母大写。</p>\n<p>​\t大驼峰式命名：类名</p>\n<p>​\t\t每个单词的首字母都大写。</p>\n<p>​\t另外，标识符的命名最好可以做到见名知意</p>\n<p>​\t\t例如：username、studentNumber等。</p>\n<h4 id=\"类型转换（理解）\"><a href=\"#类型转换（理解）\" class=\"headerlink\" title=\"类型转换（理解）\"></a>类型转换（理解）</h4><p>在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。</p>\n<p>自动类型转换：</p>\n<p>​\t把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>; <span class=\"comment\">// 将int类型的10直接赋值给double类型</span></span><br><span class=\"line\">System.out.println(num); <span class=\"comment\">// 输出10.0</span></span><br></pre></td></tr></table></figure>\n\n<p>强制类型转换：</p>\n<p>​\t把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。</p>\n<p>​\t强制类型转换格式：目标数据类型 变量名 &#x3D; (目标数据类型)值或者变量;</p>\n<p>​\t例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">num1</span> <span class=\"operator\">=</span> <span class=\"number\">5.5</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">num2</span> <span class=\"operator\">=</span> (<span class=\"type\">int</span>) num1; <span class=\"comment\">// 将double类型的num1强制转换为int类型</span></span><br><span class=\"line\">System.out.println(num2); <span class=\"comment\">// 输出5（小数位直接舍弃）</span></span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<ol>\n<li>char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，’a’对应97。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">System.out.println(a); <span class=\"comment\">// 将输出97</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b3</span> <span class=\"operator\">=</span> b1 + b2; </span><br><span class=\"line\"><span class=\"comment\">// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。</span></span><br><span class=\"line\"><span class=\"comment\">// 修改为:</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> b1 + b2;</span><br><span class=\"line\"><span class=\"comment\">// 或者：</span></span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b3</span> <span class=\"operator\">=</span> (<span class=\"type\">byte</span>) (b1 + b2);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>boolean类型不能与其他基本数据类型相互转换。</li>\n</ol>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><h3 id=\"算术运算符（理解）\"><a href=\"#算术运算符（理解）\" class=\"headerlink\" title=\"算术运算符（理解）\"></a>算术运算符（理解）</h3><h4 id=\"运算符和表达式\"><a href=\"#运算符和表达式\" class=\"headerlink\" title=\"运算符和表达式\"></a>运算符和表达式</h4><p>运算符：对常量或者变量进行操作的符号</p>\n<p>表达式：用运算符把常量或者变量连接起来符合java语法的式子就可以称为表达式。</p>\n<p>​                    不同运算符连接的表达式体现的是不同类型的表达式。</p>\n<p>举例说明：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> a + b;</span><br></pre></td></tr></table></figure>\n\n<p>  +：是运算符，并且是算术运算符。</p>\n<p>  a + b：是表达式，由于+是算术运算符，所以这个表达式叫算术表达式。</p>\n<h4 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h4><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>+</td>\n<td>加</td>\n<td>参看小学一年级</td>\n</tr>\n<tr>\n<td>-</td>\n<td>减</td>\n<td>参看小学一年级</td>\n</tr>\n<tr>\n<td>*</td>\n<td>乘</td>\n<td>参看小学二年级，与“×”相同</td>\n</tr>\n<tr>\n<td>&#x2F;</td>\n<td>除</td>\n<td>参看小学二年级，与“÷”相同</td>\n</tr>\n<tr>\n<td>%</td>\n<td>取余</td>\n<td>获取的是两个数据做除法的余数</td>\n</tr>\n</tbody></table>\n<p>注意：</p>\n<p>&#x2F;和%的区别：两个数据做除法，&#x2F;取结果的商，%取结果的余数。</p>\n<p>整数操作只能得到整数，要想得到小数，必须有浮点数参与运算。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">System.out.println(a / b); <span class=\"comment\">// 输出结果3</span></span><br><span class=\"line\">System.out.println(a % b); <span class=\"comment\">// 输出结果1</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"字符的“-”操作\"><a href=\"#字符的“-”操作\" class=\"headerlink\" title=\"字符的“+”操作\"></a>字符的“+”操作</h4><p>char类型参与算术运算，使用的是计算机底层对应的十进制数值。需要我们记住三个字符对应的数值：</p>\n<p>‘a’  –  97\t\ta-z是连续的，所以’b’对应的数值是98，’c’是99，依次递加</p>\n<p>‘A’  –  65\t\tA-Z是连续的，所以’B’对应的数值是66，’C’是67，依次递加</p>\n<p>‘0’  –  48\t\t0-9是连续的，所以’1’对应的数值是49，’2’是50，依次递加</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 可以通过使用字符与整数做算术运算，得出字符对应的数值是多少</span></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">ch1</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">System.out.println(ch1 + <span class=\"number\">1</span>); <span class=\"comment\">// 输出98，97 + 1 = 98</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">ch2</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">System.out.println(ch2 + <span class=\"number\">1</span>); <span class=\"comment\">// 输出66，65 + 1 = 66</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">ch3</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">System.out.println(ch3 + <span class=\"number\">1</span>); <span class=\"comment\">// 输出49，48 + 1 = 49</span></span><br></pre></td></tr></table></figure>\n\n<p>算术表达式中包含不同的基本数据类型的值的时候，整个算术表达式的类型会自动进行提升。</p>\n<p>提升规则：</p>\n<p>byte类型，short类型和char类型将被提升到int类型，不管是否有其他类型参与运算。</p>\n<p>整个表达式的类型自动提升到与表达式中最高等级的操作数相同的类型</p>\n<p>​       等级顺序：byte,short,char –&gt; int –&gt; long –&gt; float –&gt; double</p>\n<p>例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b1</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b2</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"comment\">// byte b3 = b1 + b2; // 该行报错，因为byte类型参与算术运算会自动提示为int，int赋值给byte可能损失精度</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i3</span> <span class=\"operator\">=</span> b1 + b2; <span class=\"comment\">// 应该使用int接收</span></span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b3</span> <span class=\"operator\">=</span> (<span class=\"type\">byte</span>) (b1 + b2); <span class=\"comment\">// 或者将结果强制转换为byte类型</span></span><br><span class=\"line\">-------------------------------</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">num1</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">num2</span> <span class=\"operator\">=</span> <span class=\"number\">20.0</span>;</span><br><span class=\"line\"><span class=\"type\">double</span> <span class=\"variable\">num3</span> <span class=\"operator\">=</span> num1 + num2; <span class=\"comment\">// 使用double接收，因为num1会自动提升为double类型</span></span><br></pre></td></tr></table></figure>\n\n<p>tips：正是由于上述原因，所以在程序开发中我们很少使用byte或者short类型定义整数。也很少会使用char类型定义字符，而使用字符串类型，更不会使用char类型做算术运算。</p>\n<h4 id=\"字符串的“-”操作\"><a href=\"#字符串的“-”操作\" class=\"headerlink\" title=\"字符串的“+”操作\"></a>字符串的“+”操作</h4><p>当“+”操作中出现字符串时，这个”+”是字符串连接符，而不是算术运算。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"string\">&quot;itheima&quot;</span>+ <span class=\"number\">666</span>); <span class=\"comment\">// 输出：itheima666</span></span><br></pre></td></tr></table></figure>\n\n<p>在”+”操作中，如果出现了字符串，就是连接运算符，否则就是算术运算。当连续进行“+”操作时，从左到右逐个执行。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"number\">1</span> + <span class=\"number\">99</span> + <span class=\"string\">&quot;年黑马&quot;</span>); <span class=\"comment\">// 输出：100年黑马</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">1</span> + <span class=\"number\">2</span> + <span class=\"string\">&quot;itheima&quot;</span> + <span class=\"number\">3</span> + <span class=\"number\">4</span>); <span class=\"comment\">// 输出：3itheima34</span></span><br><span class=\"line\"><span class=\"comment\">// 可以使用小括号改变运算的优先级 </span></span><br><span class=\"line\">System.out.println(<span class=\"number\">1</span> + <span class=\"number\">2</span> + <span class=\"string\">&quot;itheima&quot;</span> + (<span class=\"number\">3</span> + <span class=\"number\">4</span>)); <span class=\"comment\">// 输出：3itheima7</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"赋值运算符（应用）\"><a href=\"#赋值运算符（应用）\" class=\"headerlink\" title=\"赋值运算符（应用）\"></a>赋值运算符（应用）</h3><p>赋值运算符的作用是将一个表达式的值赋给左边，左边必须是可修改的，不能是常量。</p>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;</td>\n<td>赋值</td>\n<td>a&#x3D;10，将10赋值给变量a</td>\n</tr>\n<tr>\n<td>+&#x3D;</td>\n<td>加后赋值</td>\n<td>a+&#x3D;b，将a+b的值给a</td>\n</tr>\n<tr>\n<td>-&#x3D;</td>\n<td>减后赋值</td>\n<td>a-&#x3D;b，将a-b的值给a</td>\n</tr>\n<tr>\n<td>*&#x3D;</td>\n<td>乘后赋值</td>\n<td>a*&#x3D;b，将a×b的值给a</td>\n</tr>\n<tr>\n<td>&#x2F;&#x3D;</td>\n<td>除后赋值</td>\n<td>a&#x2F;&#x3D;b，将a÷b的商给a</td>\n</tr>\n<tr>\n<td>%&#x3D;</td>\n<td>取余后赋值</td>\n<td>a%&#x3D;b，将a÷b的余数给a</td>\n</tr>\n</tbody></table>\n<p>注意：</p>\n<p>扩展的赋值运算符隐含了强制类型转换。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">short</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">s = s + <span class=\"number\">10</span>; <span class=\"comment\">// 此行代码报出，因为运算中s提升为int类型，运算结果int赋值给short可能损失精度</span></span><br><span class=\"line\"></span><br><span class=\"line\">s += <span class=\"number\">10</span>; <span class=\"comment\">// 此行代码没有问题，隐含了强制类型转换，相当于 s = (short) (s + 10);</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自增自减运算符（理解）\"><a href=\"#自增自减运算符（理解）\" class=\"headerlink\" title=\"自增自减运算符（理解）\"></a>自增自减运算符（理解）</h3><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>++</td>\n<td>自增</td>\n<td>变量的值加1</td>\n</tr>\n<tr>\n<td>–</td>\n<td>自减</td>\n<td>变量的值减1</td>\n</tr>\n</tbody></table>\n<p>注意事项：</p>\n<p>​\t++和– 既可以放在变量的后边，也可以放在变量的前边。</p>\n<p>​\t单独使用的时候， ++和– 无论是放在变量的前边还是后边，结果是一样的。</p>\n<p>​\t参与操作的时候，如果放在变量的后边，先拿变量参与操作，后拿变量做++或者–。</p>\n<p>​\t参与操作的时候，如果放在变量的前边，先拿变量做++或者–，后拿变量参与操作。</p>\n<p>​\t最常见的用法：单独使用。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">i++; <span class=\"comment\">// 单独使用</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;i:&quot;</span> + i); <span class=\"comment\">// i:11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">++j; <span class=\"comment\">// 单独使用</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;j:&quot;</span> + j); <span class=\"comment\">// j:11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> x++; <span class=\"comment\">// 赋值运算，++在后边，所以是使用x原来的值赋值给y，x本身自增1</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;x:&quot;</span> + x + <span class=\"string\">&quot;, y:&quot;</span> + y); <span class=\"comment\">// x:11，y:10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> ++m; <span class=\"comment\">// 赋值运算，++在前边，所以是使用m自增后的值赋值给n，m本身自增1</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;m:&quot;</span> + m + <span class=\"string\">&quot;, m:&quot;</span> + m); <span class=\"comment\">// m:11，m:11</span></span><br></pre></td></tr></table></figure>\n\n<p>练习：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> x++ + x++ + x++;</span><br><span class=\"line\">System.out.println(y); <span class=\"comment\">// y的值是多少？</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">解析，三个表达式都是++在后，所以每次使用的都是自增前的值，但程序自左至右执行，所以第一次自增时，使用的是10进行计算，但第二次自增时，x的值已经自增到11了，所以第二次使用的是11，然后再次自增。。。</span></span><br><span class=\"line\"><span class=\"comment\">所以整个式子应该是：int y = 10 + 11 + 12;</span></span><br><span class=\"line\"><span class=\"comment\">输出结果为33。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">注意：通过此练习深刻理解自增和自减的规律，但实际开发中强烈建议不要写这样的代码！小心挨打！</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关系运算符（应用）\"><a href=\"#关系运算符（应用）\" class=\"headerlink\" title=\"关系运算符（应用）\"></a>关系运算符（应用）</h3><p>关系运算符有6种关系，分别为小于、小于等于、大于、等于、大于等于、不等于。</p>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&#x3D;&#x3D;</td>\n<td>a&#x3D;&#x3D;b，判断a和b的值是否相等，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>!&#x3D;</td>\n<td>a!&#x3D;b，判断a和b的值是否不相等，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>a&gt;b，判断a是否大于b，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>&gt;&#x3D;</td>\n<td>a&gt;&#x3D;b，判断a是否大于等于b，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>a&lt;b，判断a是否小于b，成立为true，不成立为false</td>\n</tr>\n<tr>\n<td>&lt;&#x3D;</td>\n<td>a&lt;&#x3D;b，判断a是否小于等于b，成立为true，不成立为false</td>\n</tr>\n</tbody></table>\n<p>注意事项：</p>\n<p>​\t关系运算符的结果都是boolean类型，要么是true，要么是false。</p>\n<p>​\t千万不要把“&#x3D;&#x3D;”误写成“&#x3D;”，”&#x3D;&#x3D;”是判断是否相等的关系，”&#x3D;”是赋值。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">System.out.println(a == b); <span class=\"comment\">// false</span></span><br><span class=\"line\">System.out.println(a != b); <span class=\"comment\">// true</span></span><br><span class=\"line\">System.out.println(a &gt; b); <span class=\"comment\">// false</span></span><br><span class=\"line\">System.out.println(a &gt;= b); <span class=\"comment\">// false</span></span><br><span class=\"line\">System.out.println(a &lt; b); <span class=\"comment\">// true</span></span><br><span class=\"line\">System.out.println(a &lt;= b); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关系运算的结果肯定是boolean类型，所以也可以将运算结果赋值给boolean类型的变量</span></span><br><span class=\"line\"><span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> a &gt; b;</span><br><span class=\"line\">System.out.println(flag); <span class=\"comment\">// 输出false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"逻辑运算符（应用）\"><a href=\"#逻辑运算符（应用）\" class=\"headerlink\" title=\"逻辑运算符（应用）\"></a>逻辑运算符（应用）</h3><p>逻辑运算符把各个运算的关系表达式连接起来组成一个复杂的逻辑表达式，以判断程序中的表达式是否成立，判断的结果是 true 或 false。</p>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;</td>\n<td>逻辑与</td>\n<td>a&amp;b，a和b都是true，结果为true，否则为false</td>\n</tr>\n<tr>\n<td>|</td>\n<td>逻辑或</td>\n<td>a|b，a和b都是false，结果为false，否则为true</td>\n</tr>\n<tr>\n<td>^</td>\n<td>逻辑异或</td>\n<td>a^b，a和b结果不同为true，相同为false</td>\n</tr>\n<tr>\n<td>!</td>\n<td>逻辑非</td>\n<td>!a，结果和a的结果正好相反</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义变量</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">30</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//&amp; “与”，并且的关系，只要表达式中有一个值为false，结果即为false</span></span><br><span class=\"line\">System.out.println((i &gt; j) &amp; (i &gt; k)); <span class=\"comment\">//false &amp; false,输出false</span></span><br><span class=\"line\">System.out.println((i &lt; j) &amp; (i &gt; k)); <span class=\"comment\">//true &amp; false,输出false</span></span><br><span class=\"line\">System.out.println((i &gt; j) &amp; (i &lt; k)); <span class=\"comment\">//false &amp; true,输出false</span></span><br><span class=\"line\">System.out.println((i &lt; j) &amp; (i &lt; k)); <span class=\"comment\">//true &amp; true,输出true</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;--------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//| “或”，或者的关系，只要表达式中有一个值为true，结果即为true</span></span><br><span class=\"line\">System.out.println((i &gt; j) | (i &gt; k)); <span class=\"comment\">//false | false,输出false</span></span><br><span class=\"line\">System.out.println((i &lt; j) | (i &gt; k)); <span class=\"comment\">//true | false,输出true</span></span><br><span class=\"line\">System.out.println((i &gt; j) | (i &lt; k)); <span class=\"comment\">//false | true,输出true</span></span><br><span class=\"line\">System.out.println((i &lt; j) | (i &lt; k)); <span class=\"comment\">//true | true,输出true</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;--------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//^ “异或”，相同为false，不同为true</span></span><br><span class=\"line\">System.out.println((i &gt; j) ^ (i &gt; k)); <span class=\"comment\">//false ^ false,输出false</span></span><br><span class=\"line\">System.out.println((i &lt; j) ^ (i &gt; k)); <span class=\"comment\">//true ^ false,输出true</span></span><br><span class=\"line\">System.out.println((i &gt; j) ^ (i &lt; k)); <span class=\"comment\">//false ^ true,输出true</span></span><br><span class=\"line\">System.out.println((i &lt; j) ^ (i &lt; k)); <span class=\"comment\">//true ^ true,输出false</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;--------&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//! “非”，取反</span></span><br><span class=\"line\">System.out.println((i &gt; j)); <span class=\"comment\">//false</span></span><br><span class=\"line\">System.out.println(!(i &gt; j)); <span class=\"comment\">//!false，,输出true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"短路逻辑运算符\"><a href=\"#短路逻辑运算符\" class=\"headerlink\" title=\"短路逻辑运算符\"></a>短路逻辑运算符</h4><table>\n<thead>\n<tr>\n<th>符号</th>\n<th>作用</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>&amp;&amp;</td>\n<td>短路与</td>\n<td>作用和&amp;相同，但是有短路效果</td>\n</tr>\n<tr>\n<td>||</td>\n<td>短路或</td>\n<td>作用和|相同，但是有短路效果</td>\n</tr>\n</tbody></table>\n<p>在逻辑与运算中，只要有一个表达式的值为false，那么结果就可以判定为false了，没有必要将所有表达式的值都计算出来，短路与操作就有这样的效果，可以提高效率。同理在逻辑或运算中，一旦发现值为true，右边的表达式将不再参与运算。</p>\n<ul>\n<li><p>逻辑与&amp;，无论左边真假，右边都要执行。</p>\n</li>\n<li><p>短路与&amp;&amp;，如果左边为真，右边执行；如果左边为假，右边不执行。</p>\n</li>\n<li><p>逻辑或|，无论左边真假，右边都要执行。</p>\n</li>\n<li><p>短路或||，如果左边为假，右边执行；如果左边为真，右边不执行。</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">y</span> <span class=\"operator\">=</span> <span class=\"number\">4</span>;</span><br><span class=\"line\">System.out.println((x++ &gt; <span class=\"number\">4</span>) &amp; (y++ &gt; <span class=\"number\">5</span>)); <span class=\"comment\">// 两个表达都会运算</span></span><br><span class=\"line\">System.out.println(x); <span class=\"comment\">// 4</span></span><br><span class=\"line\">System.out.println(y); <span class=\"comment\">// 5</span></span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println((x++ &gt; <span class=\"number\">4</span>) &amp;&amp; (y++ &gt; <span class=\"number\">5</span>)); <span class=\"comment\">// 左边已经可以确定结果为false，右边不参与运算</span></span><br><span class=\"line\">System.out.println(x); <span class=\"comment\">// 4</span></span><br><span class=\"line\">System.out.println(y); <span class=\"comment\">// 4</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"三元运算符（理解）\"><a href=\"#三元运算符（理解）\" class=\"headerlink\" title=\"三元运算符（理解）\"></a>三元运算符（理解）</h3><p>三元运算符语法格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">关系表达式 ? 表达式<span class=\"number\">1</span> : 表达式<span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n\n<p>解释：问号前面的位置是判断的条件，判断结果为boolean型，为true时调用表达式1，为false时调用表达式2。其逻辑为：如果条件表达式成立或者满足则执行表达式1，否则执行第二个。</p>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> a &gt; b ? a : b; <span class=\"comment\">// 判断 a&gt;b 是否为真，如果为真取a的值，如果为假，取b的值</span></span><br></pre></td></tr></table></figure>\n\n<p>三元运算符案例：</p>\n<p>1、需求：动物园里有两只老虎，已知两只老虎的体重分别为180kg、200kg，请用程序实现判断两只老虎的体重是否相同。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorTest01</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1：定义两个变量用于保存老虎的体重，单位为kg，这里仅仅体现数值即可。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">weight1</span> <span class=\"operator\">=</span> <span class=\"number\">180</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">weight2</span> <span class=\"operator\">=</span> <span class=\"number\">200</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//2：用三元运算符实现老虎体重的判断，体重相同，返回true，否则，返回false。</span></span><br><span class=\"line\">\t\t<span class=\"type\">boolean</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> weight1 == weight2 ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//3：输出结果</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;b:&quot;</span> + b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>2、需求：一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm，请用程序实现获取这三个和尚的最高身高。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorTest02</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//1：定义三个变量用于保存和尚的身高，单位为cm，这里仅仅体现数值即可。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height1</span> <span class=\"operator\">=</span> <span class=\"number\">150</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height2</span> <span class=\"operator\">=</span> <span class=\"number\">210</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height3</span> <span class=\"operator\">=</span> <span class=\"number\">165</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//2：用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">tempHeight</span> <span class=\"operator\">=</span> height1 &gt; height2 ? height1 : height2;\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//3：用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">maxHeight</span> <span class=\"operator\">=</span> tempHeight &gt; height3 ? tempHeight : height3;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//4：输出结果</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;maxHeight:&quot;</span> + maxHeight);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据输入（应用）\"><a href=\"#数据输入（应用）\" class=\"headerlink\" title=\"数据输入（应用）\"></a>数据输入（应用）</h2><p>我们可以通过 Scanner 类来获取用户的输入。使用步骤如下：</p>\n<p>1、导包。Scanner 类在java.util包下，所以需要将该类导入。导包的语句需要定义在类的上面。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner; </span><br></pre></td></tr></table></figure>\n\n<p>2、创建Scanner对象。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);<span class=\"comment\">// 创建Scanner对象，sc表示变量名，其他均不可变</span></span><br></pre></td></tr></table></figure>\n\n<p>3、接收数据</p>\n <figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> sc.nextInt(); <span class=\"comment\">// 表示将键盘录入的值作为int数返回。</span></span><br></pre></td></tr></table></figure>\n\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ScannerDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//创建对象</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">\t\t<span class=\"comment\">//接收数据</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">x</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出数据</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;x:&quot;</span> + x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>改写三个和尚案例，数据使用键盘录入。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ScannerTest</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//身高未知，采用键盘录入实现。首先导包，然后创建对象。</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">\t\t<span class=\"comment\">//键盘录入三个身高分别赋值给三个变量。</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入第一个和尚的身高：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height1</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入第二个和尚的身高：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height2</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入第三个和尚的身高：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">height3</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"comment\">//用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">tempHeight</span> <span class=\"operator\">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class=\"line\">\t\t<span class=\"comment\">//用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">maxHeight</span> <span class=\"operator\">=</span> tempHeight &gt; height3 ? tempHeight : height3;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出结果。</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;这三个和尚中身高最高的是：&quot;</span> + maxHeight +<span class=\"string\">&quot;cm&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"流程控制语句（应用）\"><a href=\"#流程控制语句（应用）\" class=\"headerlink\" title=\"流程控制语句（应用）\"></a>流程控制语句（应用）</h2><p>在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。</p>\n<h3 id=\"流程控制语句分类\"><a href=\"#流程控制语句分类\" class=\"headerlink\" title=\"流程控制语句分类\"></a>流程控制语句分类</h3><p>​\t顺序结构</p>\n<p>​\t分支结构(if, switch)</p>\n<p>​\t循环结构(for, while, do…while)</p>\n<h3 id=\"顺序结构\"><a href=\"#顺序结构\" class=\"headerlink\" title=\"顺序结构\"></a>顺序结构</h3><p>顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p>\n<h3 id=\"分支结构之if语句\"><a href=\"#分支结构之if语句\" class=\"headerlink\" title=\"分支结构之if语句\"></a>分支结构之if语句</h3><h4 id=\"if语句格式1\"><a href=\"#if语句格式1\" class=\"headerlink\" title=\"if语句格式1\"></a>if语句格式1</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式) &#123;</span><br><span class=\"line\">    语句体;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式的值</p>\n<p>②如果关系表达式的值为true就执行语句体</p>\n<p>③如果关系表达式的值为false就不执行语句体</p>\n<p>④继续执行后面的语句内容</p>\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义两个变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a == b) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a等于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a == c) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a等于c&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"if语句格式2\"><a href=\"#if语句格式2\" class=\"headerlink\" title=\"if语句格式2\"></a>if语句格式2</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式的值</p>\n<p>②如果关系表达式的值为true就执行语句体1</p>\n<p>③如果关系表达式的值为false就执行语句体2</p>\n<p>④继续执行后面的语句内容</p>\n<p>示例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo02</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义两个变量</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">\t\tb = <span class=\"number\">5</span>;\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a &gt; b) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a的值大于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;a的值不大于b&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>if语句案例：奇偶数</p>\n<p>需求：任意给出一个整数，请用程序实现判断该整数是奇数还是偶数，并在控制台输出该整数是奇数还是偶数。</p>\n<p>分析：</p>\n<p>​\t①为了体现任意给出一个整数，采用键盘录入一个数据</p>\n<p>​\t②判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构</p>\n<p>​\t③判断是否偶数需要使用取余运算符实现该功能 number % 2 &#x3D;&#x3D; 0</p>\n<p>​\t④根据判定情况，在控制台输出对应的内容</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfTest01</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//为了体现任意给出一个整数，采用键盘录入一个数据。(导包，创建对象，接收数据)</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);\t\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一个整数：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">number</span> <span class=\"operator\">=</span> sc.nextInt();\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构\t\t</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//判断是否偶数需要使用取余运算符实现该功能 number % 2 == 0</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//根据判定情况，在控制台输出对应的内容</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(number%<span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(number + <span class=\"string\">&quot;是偶数&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(number + <span class=\"string\">&quot;是奇数&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"if语句格式3\"><a href=\"#if语句格式3\" class=\"headerlink\" title=\"if语句格式3\"></a>if语句格式3</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：</span><br><span class=\"line\"><span class=\"keyword\">if</span> (关系表达式<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">1</span>;\t</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (关系表达式<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">    语句体<span class=\"number\">2</span>;\t</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    语句体n+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>执行流程：</p>\n<p>①首先计算关系表达式1的值</p>\n<p>②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值</p>\n<p>③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值</p>\n<p>④…</p>\n<p>⑤如果没有任何关系表达式为true，就执行语句体n+1。</p>\n<p><img src=\"D:\\Desktop\\img\\1545616667104.png\" alt=\"1545616667104\"></p>\n<p>示例：键盘录入一个星期数(1,2,…7)，输出对应的星期一，星期二，…星期日</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfDemo03</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;开始&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 需求：键盘录入一个星期数(1,2,...7)，输出对应的星期一，星期二，...星期日</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一个星期数(1-7)：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">week</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(week == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期一&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期二&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期三&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期四&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期五&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(week == <span class=\"number\">6</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期六&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;星期日&quot;</span>);</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;结束&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>if语句格式3案例：</p>\n<p>需求：小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。</p>\n<p>分析：</p>\n<p>​\t①小明的考试成绩未知，可以使用键盘录入的方式获取值</p>\n<p>​\t②由于奖励种类较多，属于多种判断，采用if…else…if格式实现</p>\n<p>​\t③为每种判断设置对应的条件</p>\n<p>​\t④为每种判断设置对应的奖励</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IfTest02</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//小明的考试成绩未知，可以使用键盘录入的方式获取值</span></span><br><span class=\"line\">\t\t<span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);\t</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;请输入一个分数：&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> <span class=\"variable\">score</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"comment\">//由于奖励种类较多，属于多种判断，采用if...else...if格式实现</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//为每种判断设置对应的条件</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//为每种判断设置对应的奖励\t</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//数据测试：正确数据，边界数据，错误数据</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(score&gt;<span class=\"number\">100</span> || score&lt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;你输入的分数有误&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score&gt;=<span class=\"number\">95</span> &amp;&amp; score&lt;=<span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;山地自行车一辆&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score&gt;=<span class=\"number\">90</span> &amp;&amp; score&lt;=<span class=\"number\">94</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;游乐场玩一次&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score&gt;=<span class=\"number\">80</span> &amp;&amp; score&lt;=<span class=\"number\">89</span>) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;变形金刚玩具一个&quot;</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">&quot;胖揍一顿&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl6w8r6cd0005wodua7l1h7nz","category_id":"cl6w7ns740001zsduamt1eqp2","_id":"cl6w8r6cg0007wodu2col4bxf"},{"post_id":"cl6w8r6c60000wodu26hbf91f","category_id":"cl6w7ns740001zsduamt1eqp2","_id":"cl6w90fn80000s4du2nk0eu6w"}],"PostTag":[{"post_id":"cl6w8r6c60000wodu26hbf91f","tag_id":"cl6w8r6cc0002wodu4v0mewxj","_id":"cl6w8r6cc0003wodud77q90lq"},{"post_id":"cl6w8r6cd0005wodua7l1h7nz","tag_id":"cl6w8r6cc0002wodu4v0mewxj","_id":"cl6w8utsa0000vwdu76oae3j9"}],"Tag":[{"name":"JAVA学习","_id":"cl6w7ns760002zsdudc4bg5yw"},{"name":"JAVA","_id":"cl6w8r6cc0002wodu4v0mewxj"}]}}